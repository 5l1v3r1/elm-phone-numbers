module PhoneNumbers.Countries exposing (countryAC, countryAD, countryAE, countryAF, countryAG, countryAI, countryAL, countryAM, countryAO, countryAR, countryAS, countryAT, countryAU, countryAW, countryAX, countryAZ, countryBA, countryBB, countryBD, countryBE, countryBF, countryBG, countryBH, countryBI, countryBJ, countryBL, countryBM, countryBN, countryBO, countryBQ, countryBR, countryBS, countryBT, countryBW, countryBY, countryBZ, countryCA, countryCC, countryCD, countryCF, countryCG, countryCH, countryCI, countryCK, countryCL, countryCM, countryCN, countryCO, countryCR, countryCU, countryCV, countryCW, countryCX, countryCY, countryCZ, countryDE, countryDJ, countryDK, countryDM, countryDO, countryDZ, countryEC, countryEE, countryEG, countryEH, countryER, countryES, countryET, countryFI, countryFJ, countryFK, countryFM, countryFO, countryFR, countryGA, countryGB, countryGD, countryGE, countryGF, countryGG, countryGH, countryGI, countryGL, countryGM, countryGN, countryGP, countryGQ, countryGR, countryGT, countryGU, countryGW, countryGY, countryHK, countryHN, countryHR, countryHT, countryHU, countryID, countryIE, countryIL, countryIM, countryIN, countryIO, countryIQ, countryIR, countryIS, countryIT, countryJE, countryJM, countryJO, countryJP, countryKE, countryKG, countryKH, countryKI, countryKM, countryKN, countryKP, countryKR, countryKW, countryKY, countryKZ, countryLA, countryLB, countryLC, countryLI, countryLK, countryLR, countryLS, countryLT, countryLU, countryLV, countryLY, countryMA, countryMC, countryMD, countryME, countryMF, countryMG, countryMH, countryMK, countryML, countryMM, countryMN, countryMO, countryMP, countryMQ, countryMR, countryMS, countryMT, countryMU, countryMV, countryMW, countryMX, countryMY, countryMZ, countryNA, countryNC, countryNE, countryNF, countryNG, countryNI, countryNL, countryNO, countryNP, countryNR, countryNU, countryNZ, countryOM, countryPA, countryPE, countryPF, countryPG, countryPH, countryPK, countryPL, countryPM, countryPR, countryPS, countryPT, countryPW, countryPY, countryQA, countryRE, countryRO, countryRS, countryRU, countryRW, countrySA, countrySB, countrySC, countrySD, countrySE, countrySG, countrySH, countrySI, countrySJ, countrySK, countrySL, countrySM, countrySN, countrySO, countrySR, countrySS, countryST, countrySV, countrySX, countrySY, countrySZ, countryTA, countryTC, countryTD, countryTG, countryTH, countryTJ, countryTK, countryTL, countryTM, countryTN, countryTO, countryTR, countryTT, countryTV, countryTW, countryTZ, countryUA, countryUG, countryUS, countryUY, countryUZ, countryVA, countryVC, countryVE, countryVG, countryVI, countryVN, countryVU, countryWF, countryWS, countryXK, countryYE, countryYT, countryZA, countryZM, countryZW)

{-| This file is auto generated. Do not edit this file directly.
-}

import PhoneNumbers exposing (DescriptionType(..))
import Regex


{-| -}
countryAC : PhoneNumbers.Territory
countryAC =
    { id = "AC"
    , countryCode = Just 247
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[01589]\\d|[46])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "62889"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6[2-467]\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "40123"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "4\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "542011"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[01589]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAD : PhoneNumbers.Territory
countryAD =
    { id = "AD"
    , countryCode = Just 376
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1|6\\d)\\d{7}|[136-9]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1800\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "712345"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[78]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "312345"
          , possibleLengths =
                Just
                    { national =
                        "6,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "690\\d{6}|[36]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "18001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "180[02]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "912345"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[19]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAE : PhoneNumbers.Territory
countryAE =
    { id = "AE"
    , countryCode = Just 971
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22345678"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "[2-4679][2-8]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "501234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5[024-68]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "[5-12]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "400\\d{6}|800\\d{2,9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[02]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "700012345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "700[05]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "600212345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "600[25]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAF : PhoneNumbers.Territory
countryAF =
    { id = "AF"
    , countryCode = Just 93
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-7]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "234567890"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "701234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:[014-9]\\d|2[89]|3[01])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAG : PhoneNumbers.Territory
countryAG =
    { id = "AG"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:268|[58]\\d\\d|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2684601234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "268(?:4(?:6[0-38]|84)|56[0-2])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "2684641234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "268(?:464|7(?:1[3-9]|2\\d|3[246]|64|[78][0-689]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "2684061234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "26840[69]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "2684801234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "26848[01]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAI : PhoneNumbers.Territory
countryAI =
    { id = "AI"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:264|[58]\\d\\d|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2644612345"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "2644(?:6[12]|9[78])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "2642351234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "264(?:235|476|5(?:3[6-9]|8[1-4])|7(?:29|72))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAL : PhoneNumbers.Territory
countryAL =
    { id = "AL"
    , countryCode = Just 355
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[2-58]|6\\d)\\d\\d|700)\\d{5}|(?:8\\d{2,3}|900)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22345678"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("[5-7]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:[2358](?:[16-9]\\d[2-9]|[2-5][2-9]\\d)|4(?:[2-57-9][2-9]|6\\d)\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "662123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6(?:[689][2-9]|7[2-6])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900123"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[1-9]\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "808123"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "808[1-9]\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "70021234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "700[2-9]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAM : PhoneNumbers.Territory
countryAM =
    { id = "AM"
    , countryCode = Just 374
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[1-489]\\d|55|60|77)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "10123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("5,6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:(?:1[0-2]|47)\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "77123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:4[1349]|55|77|88|9[13-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[016]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "80112345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[1-4]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "60271234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "60(?:2[78]|3[5-9]|4[02-9]|5[0-46-9]|[6-8]\\d|90)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAO : PhoneNumbers.Territory
countryAO =
    { id = "AO"
    , countryCode = Just 244
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[29]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "222123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2\\d(?:[0134][25-9]|[25-9]\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "923123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9[1-49]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAR : PhoneNumbers.Territory
countryAR =
    { id = "AR"
    , countryCode = Just 54
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:11|(?:[2368]|9\\d)\\d)\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "810\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1123456789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("[6-8]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:(?:11[2-7]|670)\\d\\d|2(?:2(?:0(?:2[4-6]|[45]\\d)|(?:1[2-6]|3[3-6])\\d|2(?:14|[3467][4-6]|[59][45])|4(?:[156][4-6]|[23]4|4[45])|5(?:2[45]|[45][4-6]|7[3-6])|6(?:[145]4|2[2-6]|[6-8][4-6])|7[1-4]4|8(?:1[3-6]|[356]4|4[2-7])|9(?:1[4-6]|[267]4))|3(?:0(?:2[2-6]|4\\d)|1(?:[47][4-6]|64)|2(?:[03][2-6]|4[3-6]|5[4-6]|6[45])|3[13-8]4|4(?:[24][45]|34|5[4-6]|6[3-6])|5(?:[25][4-6]|[346-8]4)|(?:64|7[45])\\d|9(?:2[3-6]|[3-5]4|6[4-6]))|4(?:7(?:3[45]|[48][4-6]|54|7[2-6])|94\\d)|6(?:(?:04|1[2-7]|[36][45])\\d|2(?:2[2-6]|[46]4|5[4-6])|4(?:[45]\\d|6[0-46-9]|[78]4)|5(?:[1568]4|7[2-7]))|80[45]\\d|9(?:0(?:1[3-6]|2[45]|34)|(?:1[4-6]|9[3-6])\\d|2(?:0[2-7]|[1457-9]4|[26][45]|3[3-6])|3(?:[1356]4|2[4-6]|4[45])|4(?:[08]4|2[2-6]|4\\d|5[02-69]|6[45])|5(?:[23]4|4[2-8])|6(?:[23]4|4[3-6]|6[2-7])|7(?:2[45]|[4-6]\\d)|8(?:24|3[2-6]|[45]\\d)))|3(?:3(?:2(?:7[45]|9[3-6])|64\\d|8[2578][4-6])|4(?:0[0-24-9][4-6]|(?:1[2-7]|2[4-6])\\d|3(?:4\\d|5[0-7]|6[1-69]|[78][4-6])|4(?:2[3-6]|[457][4-6]|6[2-6])|5(?:4[0-4679]|[56][024-6]|8[4-6])|6(?:[03-9][4-6]|2[2-6])|7(?:1[3-6]|2[4-6]|6[2-6])|8(?:[27][2-7]|3[4-6]|4\\d|9[2-6])|9(?:[136-8][4-6]|2[2-7]))|5(?:1[2-8]\\d|2(?:[124][4-6]|5[3-6])|3(?:[23][4-6]|[4-6]\\d|7[3-6])|4(?:1[2-6]|[2689][4-6]|[347][3-6])|6(?:[23][4-6]|4[2-6])|7(?:1[3-6]|[2-6][4-6])|8(?:[23][4-6]|[46]\\d|5[013-7]))|6(?:2[45]|44)\\d|7(?:[069][45]\\d|1(?:[15][46]|6[4-6]|8[3-6])|(?:2[15]|3[145]|4[13])[4-6]|5(?:[17][3-6]|[468][4-6]|5[2-7])|7(?:[2-5][4-6]|7[2-8])|8(?:1[46]|[26][4-6]))|8(?:(?:0[45]|1[2-6])\\d|2(?:1[46]|[5-7][4-6])|3(?:[278][4-6]|4\\d|5[124-6])|4(?:[16][46]|[3-5][4-6])|5(?:[34]\\d|5[0-46-9]|6[0-246-9]|[78][4-6])|6(?:[1-378][4-6]|5[2-8]|9[46])|7(?:[24-6]\\d|3[2-6]|7[4-6]|8[2-7])|8(?:[3-5]\\d|6[0-68]|7[4-6]|8[3-6])|9(?:[12][46]|4[4-6]))))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "91123456789"
          , possibleLengths =
                Just
                    { national =
                        "10,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("[6-8]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:675\\d\\d|9(?:11[2-7]\\d\\d|2(?:2(?:0(?:2[4-6]|[45]\\d)|(?:1[2-6]|3[3-6])\\d|2(?:14|[3467][4-6]|[59][45])|4(?:[156][4-6]|[23]4|4[45])|5(?:2[45]|[45][4-6]|7[3-6])|6(?:[145]4|2[2-6]|[6-8][4-6])|7[1-4]4|8(?:1[3-6]|[356]4|4[2-7])|9(?:1[4-6]|[267]4))|3(?:0(?:2[2-6]|4\\d)|1(?:[47][4-6]|64)|2(?:[03][2-6]|4[3-6]|5[4-6]|6[45])|3[13-8]4|4(?:[24][45]|34|5[4-6]|6[3-6])|5(?:[25][4-6]|[346-8]4)|(?:64|7[45])\\d|9(?:2[3-6]|[3-5]4|6[4-6]))|4(?:7(?:3[45]|[48][4-6]|54|7[2-6])|94\\d)|6(?:(?:04|1[2-7]|[36][45])\\d|2(?:2[2-6]|[46]4|5[4-6])|4(?:[45]\\d|6[0-46-9]|[78]4)|5(?:[1568]4|7[2-7]))|80[45]\\d|9(?:0(?:1[3-6]|2[45]|34)|(?:1[4-6]|9[3-6])\\d|2(?:0[2-7]|[1457-9]4|[26][45]|3[3-6])|3(?:[1356]4|2[4-6]|4[45])|4(?:[08]4|2[2-6]|4\\d|5[02-69]|6[45])|5(?:[23]4|4[2-8])|6(?:[23]4|4[3-6]|6[2-7])|7(?:2[45]|[4-6]\\d)|8(?:24|3[2-6]|[45]\\d)))|3(?:3(?:2(?:7[45]|9[3-6])|64\\d|8[2578][4-6])|4(?:0[0-24-9][4-6]|(?:1[2-7]|2[4-6])\\d|3(?:4\\d|5[0-7]|6[1-69]|[78][4-6])|4(?:2[3-6]|[457][4-6]|6[2-6])|5(?:4[0-4679]|[56][024-6]|8[4-6])|6(?:[03-9][4-6]|2[2-6])|7(?:1[3-6]|2[4-6]|6[2-6])|8(?:[27][2-7]|3[4-6]|4\\d|9[2-6])|9(?:[136-8][4-6]|2[2-7]))|5(?:1[2-8]\\d|2(?:[124][4-6]|5[3-6])|3(?:[23][4-6]|[4-6]\\d|7[3-6])|4(?:1[2-6]|[2689][4-6]|[347][3-6])|6(?:[23][4-6]|4[2-6])|7(?:1[3-6]|[2-6][4-6])|8(?:[23][4-6]|[46]\\d|5[013-7]))|6(?:2[45]|44)\\d|7(?:[069][45]\\d|1(?:[15][46]|6[4-6]|8[3-6])|(?:2[15]|3[145]|4[13])[4-6]|5(?:[17][3-6]|[468][4-6]|5[2-7])|7(?:[2-5][4-6]|7[2-8])|8(?:1[46]|[26][4-6]))|8(?:(?:0[45]|1[2-6])\\d|2(?:1[46]|[5-7][4-6])|3(?:[278][4-6]|4\\d|5[124-6])|4(?:[16][46]|[3-5][4-6])|5(?:[34]\\d|5[0-46-9]|6[0-246-9]|[78][4-6])|6(?:[1-378][4-6]|5[2-8]|9[46])|7(?:[24-6]\\d|3[2-6]|7[4-6]|8[2-7])|8(?:[3-5]\\d|6[0-68]|7[4-6]|8[3-6])|9(?:[12][46]|4[4-6])))))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "6001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "60[04579]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "8101234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "810\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAS : PhoneNumbers.Territory
countryAS =
    { id = "AS"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[58]\\d\\d|684|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "6846221234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "6846(?:22|33|44|55|77|88|9[19])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "6847331234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "684(?:2(?:5[2468]|72)|7(?:3[13]|70))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAT : PhoneNumbers.Territory
countryAT =
    { id = "AT"
    , countryCode = Just 43
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[1-35-9]\\d{8,12}|4(?:[0-24-9]\\d{4,11}|3(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7}))|[1-35-8]\\d{7}|[1-35-7]\\d{6}|[135-7]\\d{5}|[15]\\d{4}|1\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1234567890"
          , possibleLengths =
                Just
                    { national =
                        "[4-13]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("3"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1(?:11|[2-9]\\d{2,10})|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-8]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|7(?:2[1-8]|3[25]|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\d{3,9}|4(?:(?:2[1-8]|35|7[1368]|8[2457])\\d{3,9}|63\\d{2,9})|5(?:12\\d{2,9}|(?:2[1-8]|3[357]|4[147]|5[12578]|6[37])\\d{3,9})|6(?:(?:13|2[1-47]|4[135-8]|5[468])\\d{3,9}|62\\d{2,9}))\\d|(?:316|732)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "664123456"
          , possibleLengths =
                Just
                    { national =
                        "[7-13]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6(?:5[0-3579]|6[013-9]|[7-9]\\d)\\d{4,10}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "[9-13]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6,10}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900123456"
          , possibleLengths =
                Just
                    { national =
                        "[9-13]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:0[01]|3[019])\\d{6,10}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "810123456"
          , possibleLengths =
                Just
                    { national =
                        "[8-13]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:10|2[018])\\d{6,10}|828\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "780123456"
          , possibleLengths =
                Just
                    { national =
                        "[5-13]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:0[1-9]|17|[79]\\d)\\d{2,10}|7[28]0\\d{6,10}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAU : PhoneNumbers.Territory
countryAU =
    { id = "AU"
    , countryCode = Just 61
    , internationalPrefix = Just "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "1\\d{4,9}|(?:[2-478]\\d\\d|550)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "[6-8],10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1[38]00\\d{6}|1(?:345[0-4]|802)\\d{3}|13\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "212345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("8"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:[237]\\d{5}|8(?:51(?:0(?:0[03-9]|[1247]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-6])|1(?:1[69]|[23]\\d|4[0-4]))|(?:[6-8]\\d{3}|9(?:[02-9]\\d\\d|1(?:[0-57-9]\\d|6[0135-9])))\\d))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "412345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "1612345"
          , possibleLengths =
                Just
                    { national =
                        "[5-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "16\\d{3,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1800123456"
          , possibleLengths =
                Just
                    { national =
                        "7,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "180(?:0\\d{3}|2)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "1900123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "190[0-26]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "1300123456"
          , possibleLengths =
                Just
                    { national =
                        "6,8,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "550123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:14(?:5\\d|71)|550\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAW : PhoneNumbers.Territory
countryAW =
    { id = "AW"
    , countryCode = Just 297
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[25-79]\\d\\d|800)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "5212345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:2\\d|8[1-9])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "5601234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:290|5[69]\\d|6(?:[03]0|22|4[0-2]|[69]\\d)|7(?:[34]\\d|7[07])|9(?:6[45]|9[4-8]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "5011234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:28\\d|501)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAX : PhoneNumbers.Territory
countryAX =
    { id = "AX"
    , countryCode = Just 358
    , internationalPrefix = Just "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[1247]\\d|3[0-46-9]|[56]0)\\d\\d|800)\\d{4,6}|(?:[1-47]\\d|50)\\d{4,5}|2\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "181234567"
          , possibleLengths =
                Just
                    { national =
                        "[6-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "18[1-8]\\d{3,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "412345678"
          , possibleLengths =
                Just
                    { national =
                        "[6-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:4[0-8]|50)\\d{4,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "[7-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{4,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "600123456"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[67]00\\d{5,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "10112345"
          , possibleLengths =
                Just
                    { national =
                        "[5-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:10|[23][09])\\d{4,8}|60(?:[12]\\d{5,6}|6\\d{7})|7(?:(?:1|3\\d)\\d{7}|5[03-9]\\d{3,7})|20[2-59]\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryAZ : PhoneNumbers.Territory
countryAZ =
    { id = "AZ"
    , countryCode = Just 994
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:(?:[12457]\\d|60|88)\\d|365)\\d{3}|900200)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "123123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:(?:1[28]\\d|2(?:[045]2|1[24]|2[2-4]|33|6[23]))\\d\\d|365(?:[0-46-9]\\d|5[0-35-9]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "401234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:36554|(?:4[04]|5[015]|60|7[07])\\d{3})\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "881234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "88\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900200123"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900200\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBA : PhoneNumbers.Territory
countryBA =
    { id = "BA"
    , countryCode = Just 387
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[3589]\\d|49|6\\d\\d?|70)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "30212345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:3(?:[05-79][2-9]|1[4579]|[23][24-9]|4[2-4689]|8[2457-9])|49[2-579]|5(?:0[2-49]|[13][2-9]|[268][2-4679]|4[4689]|5[2-79]|7[2-69]|9[2-4689]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "61123456"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6(?:0(?:3\\d|40)|[1-356]\\d|44[0-6]|71[137])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8[08]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9[0246]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "82123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8[12]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "70341234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70(?:3[0146]|[56]0)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBB : PhoneNumbers.Territory
countryBB =
    { id = "BB"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:246|[58]\\d\\d|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2464123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\d|3[2-9])|5(?:20|[34]\\d|54|7[1-3])|6(?:2\\d|38)|7[35]7|9(?:1[89]|63))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "2462501234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "246(?:2(?:[356]\\d|4[0-57-9]|8[0-79])|45\\d|69[5-7]|8(?:[2-5]\\d|83))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:246976|900[2-9]\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "2463101234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "24631\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "2464301234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "246(?:292|367|4(?:1[7-9]|3[01]|44|67)|7(?:36|53))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBD : PhoneNumbers.Territory
countryBD =
    { id = "BD"
    , countryCode = Just 880
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[13469]\\d{9}|8[0-79]\\d{7,8}|[2-7]\\d{8}|[2-9]\\d{7}|[3-689]\\d{6}|[57-9]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "27111234"
          , possibleLengths =
                Just
                    { national =
                        "[6-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:2(?:[45]\\d{3}|7(?:1[0-267]|2[0-289]|3[0-29]|4[01]|5[1-3]|6[013]|7[0178]|91)|8(?:0[125]|[13][1-6]|2[0157-9]|41|6[1-35]|7[1-5]|8[1-8]|9[0-6])|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[01367]|7[15]|8[0146-9]))|7(?:02|21\\d|[3-589]1|6[12]|72[24])\\d|8(?:(?:[01]|217|3[12])\\d|4[12]|[5-7](?:1\\d|2)))\\d|3(?:(?:0(?:2[348]\\d|3[2-6])|(?:1(?:2[5-7]|[5-7])|3(?:1|24)|[5-7]1)\\d)\\d|2(?:1\\d\\d|2(?:[35]\\d\\d|4))|4(?:1\\d\\d|2(?:[25]\\d\\d|[47]))|8(?:1\\d\\d|2(?:(?:2\\d|4)\\d|3)))|4(?:0(?:2(?:[09]\\d|7)|33\\d\\d)|(?:1\\d|4(?:2[2-46]|5[25])|8(?:23|54))\\d\\d|2(?:1\\d\\d|2(?:[25]|[67]\\d\\d))|3(?:1\\d\\d(?:\\d{2})?|(?:2[236-9]|32)\\d\\d)|525|6(?:(?:[18]|2[3-6]|62)\\d\\d|5(?:[38]|[5-7]\\d\\d))|9(?:(?:[18]|2[2-5])\\d\\d|53\\d\\d?))|5(?:(?:02[03489]|1|22[2457]|32[35-79]|42[46]|[58]26|724)\\d\\d|6(?:(?:[18]|53)\\d\\d|2))|6(?:(?:(?:[04]2[34]|32[3478]|52[47]|[78]2[2-5]|92[2-6])\\d|6(?:[18]\\d|6(?:2(?:2|[34]\\d)|5[245]\\d)))\\d|2(?:(?:2[2-5]|8)\\d\\d|5(?:[3-5]\\d\\d|7)))|9(?:[24]1\\d\\d|[35]1))\\d{3}|(?:3(?:0(?:2[02-9]\\d|3[56])|(?:22[1-5]|32[2-6]|422)\\d|529)|(?:4(?:22[2-8]|32[02-9]|(?:[48][18]|71)\\d|5(?:1\\d|23)|6(?:2[467]|5[3-57]))|5(?:[2-47-9]1\\d|5(?:1\\d|26))|6(?:0(?:1\\d|24)|[3-589]1\\d|665[35])|81|9(?:[024]2|1\\d|81))\\d|732)\\d{3}|(?:4[46]23|5(?:222|32[37]))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "1812345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1[13-9]\\d|(?:3[78]|44)[02-9]|6(?:44|6[02-9]))\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[03]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "9604123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "96(?:0[469]|1[0-47]|3[389]|6[69]|7[78])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBE : PhoneNumbers.Territory
countryBE =
    { id = "BE"
    , countryCode = Just 32
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "4\\d{8}|[1-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "12345678"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:1[0-69]|[23][2-8]|4[23]|5\\d|6[013-57-9]|71|9[2-4])\\d|8(?:0[2-8]|[1-79]\\d))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "470123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "4(?:5[56]|6[0135-8]|[79]\\d|8[3-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800[1-9]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:70(?:2[0-57]|3[0457]|44|69|7[0579])|90(?:0[0-35-8]|1[36]|2[0-3568]|3[0135689]|4[2-68]|5[1-68]|6[0-378]|7[23568]|9[34679]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "78791234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7879\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "78102345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "78(?:0[57]|1[0458]|2[25]|3[5-8]|48|[56]0|7[078])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBF : PhoneNumbers.Territory
countryBF =
    { id = "BF"
    , countryCode = Just 226
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[25-7]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "20491234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:0(?:49|5[23]|6[56]|9[016-9])|4(?:4[569]|5[4-6]|6[56]|7[0179])|5(?:[34]\\d|50|6[5-7]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "70123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:5[124-8]|[67]\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBG : PhoneNumbers.Territory
countryBG =
    { id = "BG"
    , countryCode = Just 359
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2123456"
          , possibleLengths =
                Just
                    { national =
                        "[6-8]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("4,5"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:(?:[236]\\d|5[1-9]|8[1-6]|9[1-7])\\d|4(?:[124-7]\\d|3[1-6])|7(?:0[1-9]|[1-9]\\d))\\d{4,5}|2\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "48123456"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:4(?:3[07-9]|8\\d)|(?:8[7-9]\\d|9(?:8\\d|9[69]))\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "70012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "700\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBH : PhoneNumbers.Territory
countryBH =
    { id = "BH"
    , countryCode = Just 973
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[136-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "17001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1(?:3[1356]|6[0156]|7\\d)\\d|6(?:1[16]\\d|500|6(?:0\\d|3[12]|44|7[7-9])|9[69][69])|7(?:1(?:11|78)|7\\d\\d))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "36001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3(?:[1-4679]\\d|5[013-69]|8[0-47-9])\\d|6(?:3(?:00|33|6[16])|6(?:3[03-9]|[69]\\d|7[0-6])))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:87|9[014578])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "84123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "84\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBI : PhoneNumbers.Territory
countryBI =
    { id = "BI"
    , countryCode = Just 257
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[267]\\d|31)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22201234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "22\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "79561234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:29|31|6[189]|7[125-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBJ : PhoneNumbers.Territory
countryBJ =
    { id = "BJ"
    , countryCode = Just 229
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2689]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "20211234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:02|1[037]|2[45]|3[68])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "90011234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6\\d|9[03-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "85751234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "857[58]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "81123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "81\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBL : PhoneNumbers.Territory
countryBL =
    { id = "BL"
    , countryCode = Just 590
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:590|69\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "590271234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "590(?:2[7-9]|5[12]|87)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "690001234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBM : PhoneNumbers.Territory
countryBM =
    { id = "BM"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:441|[58]\\d\\d|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "4412345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "441(?:2(?:02|23|[3479]\\d|61)|[46]\\d\\d|5(?:4\\d|60|89)|824)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "4413701234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "441(?:[37]\\d|5[0-39])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBN : PhoneNumbers.Territory
countryBN =
    { id = "BN"
    , countryCode = Just 673
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-578]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2345678"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:[013-9]\\d|2[0-7])|[3-5]\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7123456"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:22[89]|[78]\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBO : PhoneNumbers.Territory
countryBO =
    { id = "BO"
    , countryCode = Just 591
    , internationalPrefix = Just "00(?:1\\d)?"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-467]\\d{3}|80017)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2(?:2\\d\\d|5(?:11|[258]\\d|9[67])|6(?:12|2\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\d\\d|4(?:6\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:[27]\\d|3[2-4]|4[248]|5[24]|6[2-6]))|4(?:4\\d\\d|6(?:11|[24689]\\d|72)))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "71234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[67]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800171234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80017\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBQ : PhoneNumbers.Territory
countryBQ =
    { id = "BQ"
    , countryCode = Just 599
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[34]1|7\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "7151234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:318[023]|41(?:6[023]|70)|7(?:1[578]|50)\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "3181234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:31(?:8[14-8]|9[14578])|416[14-9]|7(?:0[01]|7[07]|8\\d|9[056])\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBR : PhoneNumbers.Territory
countryBR =
    { id = "BR"
    , countryCode = Just 55
    , internationalPrefix = Just "00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[1-46-9]\\d\\d|5(?:[0-46-9]\\d|5[0-24679]))\\d{8}|[1-9]\\d{9}|[3589]\\d{8}|[34]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:300\\d|40(?:0\\d|20))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1123456789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("8"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-5]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "11961234567"
          , possibleLengths =
                Just
                    { national =
                        "10,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("8"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:[189][1-9]|2[12478])(?:7|9\\d)\\d{7}|(?:3[1-578]|[46][1-9]|5[13-5]|7[13-579])(?:[6-9]|9\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "300123456"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:300|[59]00\\d?)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "40041234"
          , possibleLengths =
                Just
                    { national =
                        "8,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:300\\d(?:\\d{2})?|4(?:0(?:0\\d|20)|370))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBS : PhoneNumbers.Territory
countryBS =
    { id = "BS"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:242|[58]\\d\\d|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2423456789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-4]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "2423591234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\d|[89]9))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:242300|8(?:00|33|44|55|66|77|88)[2-9]\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "2422250123"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "242225[0-46-9]\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBT : PhoneNumbers.Territory
countryBT =
    { id = "BT"
    , countryCode = Just 975
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[17]\\d{7}|[2-8]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2345678"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "17123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1[67]|77)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBW : PhoneNumbers.Territory
countryBW =
    { id = "BW"
    , countryCode = Just 267
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[2-6]|7\\d)\\d|90)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2401234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0-35-9]|55|[69]\\d|7[01])|4(?:6[03]|7[1267]|9[0-5])|5(?:3[0389]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[067]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "71123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:[1-6]\\d{3}|7(?:[014-8]\\d\\d|200))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9012345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "79101234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "79(?:1(?:[01]\\d|20)|2[0-2]\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBY : PhoneNumbers.Territory
countryBY =
    { id = "BY"
    , countryCode = Just 375
    , internationalPrefix = Just "810"
    , nationalPrefix = Just "8"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[12]|8[0-7]\\d)\\d|33|44|902)\\d{7}|8(?:[05-79]\\d|1[0-489])\\d{7}|8[0-79]\\d{5,7}|8\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "[6-11]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8(?:0[013]|10|20\\d)|902)\\d{7}|800\\d{3,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "152450911"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("[5-7]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1(?:5(?:1[1-5]|[24]\\d|6[2-4]|9[1-7])|6(?:[235]\\d|4[1-7])|7\\d\\d)|2(?:1(?:[246]\\d|3[0-35-9]|5[1-9])|2(?:[235]\\d|4[0-8])|3(?:[26]\\d|3[02-79]|4[024-7]|5[03-7])))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "294911911"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:5[5-79]|9[1-9])|(?:33|44)\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8011234567"
          , possibleLengths =
                Just
                    { national =
                        "[6-11]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:0[013]|20\\d)\\d{7}|800\\d{3,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9021234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:810|902)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "249123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "249\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryBZ : PhoneNumbers.Territory
countryBZ =
    { id = "BZ"
    , countryCode = Just 501
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:0800\\d|[2-8])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2221234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:[02]\\d|36)|[3-58][02]\\d|7(?:[02]\\d|32))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "6221234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6[0-35-7]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "08001234123"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "0800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCA : PhoneNumbers.Territory
countryCA =
    { id = "CA"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-8]\\d|90)\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "5062345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "5062345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:5(?:00|2[12]|33|44|66|77|88)|622)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "6002012345"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "600[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCC : PhoneNumbers.Territory
countryCC =
    { id = "CC"
    , countryCode = Just 61
    , internationalPrefix = Just "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "1\\d{5,9}|(?:[48]\\d\\d|550)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "891621234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("8"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "8(?:51(?:0(?:02|31|60)|118)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "412345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1800123456"
          , possibleLengths =
                Just
                    { national =
                        "7,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "180(?:0\\d{3}|2)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "1900123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "190[0-26]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "1300123456"
          , possibleLengths =
                Just
                    { national =
                        "6,8,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "550123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:14(?:5\\d|71)|550\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCD : PhoneNumbers.Territory
countryCD =
    { id = "CD"
    , countryCode = Just 243
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[189]\\d{8}|[1-68]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1234567"
          , possibleLengths =
                Just
                    { national =
                        "7,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "12\\d{7}|[1-6]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "991234567"
          , possibleLengths =
                Just
                    { national =
                        "7,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8(?:[0-2459]\\d\\d|8)|9[017-9]\\d\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCF : PhoneNumbers.Territory
countryCF =
    { id = "CF"
    , countryCode = Just 236
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[27]\\d{3}|8776)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21612345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2[12]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "70012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[0257]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "87761234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8776\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCG : PhoneNumbers.Territory
countryCG =
    { id = "CG"
    , countryCode = Just 242
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:0\\d|80)\\d|222)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "222123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "222[1-589]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "061234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "0[14-6]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80(?:0\\d\\d|11[0-4])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCH : PhoneNumbers.Territory
countryCH =
    { id = "CH"
    , countryCode = Just 41
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "8\\d{11}|[2-9]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "212345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "781234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[35-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "740123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "74[0248]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[016]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "840123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "84[0248]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "878123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "878\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "581234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5[18]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "860123456789"
          , possibleLengths =
                Just
                    { national =
                        "12"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "860\\d{9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCI : PhoneNumbers.Territory
countryCI =
    { id = "CI"
    , countryCode = Just 225
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[02-8]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:0[023]|1[02357]|[23][045]|4[03-5])|3(?:0[06]|1[069]|[2-4][07]|5[09]|6[08]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "01234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[07][1-9]|[45]\\d|6[014-9]|8[4-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCK : PhoneNumbers.Territory
countryCK =
    { id = "CK"
    , countryCode = Just 682
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-8]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21234"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2\\d|3[13-7]|4[1-5])\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "71234"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[5-8]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCL : PhoneNumbers.Territory
countryCL =
    { id = "CL"
    , countryCode = Just 56
    , internationalPrefix = Just "(?:0|1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))0"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1230|[2-57-9]\\d|6\\d{1,3})\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "10,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "600\\d{7,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "221234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:1962|(?:2\\d\\d|32[0-46-8])\\d)|(?:(?:3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|9[2-9])\\d|8(?:0[1-9]|[1-9]\\d))\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "221234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:1962|(?:2\\d\\d|32[0-46-8])\\d)|(?:(?:3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|9[2-9])\\d|8(?:0[1-9]|[1-9]\\d))\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1230\\d|800)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "6001234567"
          , possibleLengths =
                Just
                    { national =
                        "10,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "600\\d{7,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "441234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "44\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCM : PhoneNumbers.Territory
countryCM =
    { id = "CM"
    , countryCode = Just 237
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[26]\\d\\d|88)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "222123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:22|33|4[23])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "671234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6[5-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "88012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "88\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCN : PhoneNumbers.Territory
countryCN =
    { id = "CN"
    , countryCode = Just 86
    , internationalPrefix = Just "(?:1(?:[12]\\d{3}|79\\d{2}|9[0-7]\\d{2}))?00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:(?:1[03-68]|2\\d)\\d\\d|[3-79])\\d|8[0-57-9])\\d{7}|[1-579]\\d{10}|8[0-57-9]\\d{8,9}|[1-79]\\d{9}|[1-9]\\d{7}|[12]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "[10-12]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:4|(?:10)?8)00\\d{7}|950\\d{7,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1012345678"
          , possibleLengths =
                Just
                    { national =
                        "[7-12]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("5,6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "21(?:100\\d{2}|95\\d{3,4}|\\d{8,10})|(?:10|2[02-57-9]|3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98))(?:100\\d{2}|95\\d{3,4}|\\d{8})|(?:3(?:1[02-9]|35|49|5\\d|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|3[3-9]|5[2-9]|6[4789]|7\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\d|2[248]|3[04-9]|4[3-6]|5[0-4689]|6[2368]|9[02-9])|8(?:078|1[236-8]|2[5-7]|3\\d|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100\\d{2}|95\\d{3,4}|\\d{7})"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "13123456789"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:[38]\\d{3}|4[57]\\d{2}|5[0-35-9]\\d{2}|6[25-7]\\d{2}|7(?:[0-35-8]\\d{2}|40[0-5])|9[189]\\d{2})\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10,12"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:10)?800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "16812345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "16[08]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "4001234567"
          , possibleLengths =
                Just
                    { national =
                        "[7-11]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("5,6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "400\\d{7}|950\\d{7,8}|(?:10|2[0-57-9]|3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[4789]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[3678]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))96\\d{3,4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCO : PhoneNumbers.Territory
countryCO =
    { id = "CO"
    , countryCode = Just 57
    , internationalPrefix = Just "00(?:4(?:[14]4|56)|[579])"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1\\d|3)\\d{9}|[124-8]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "12345678"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "[124-8][2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "3211234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "3(?:0[0-5]|1\\d|2[0-3]|5[01])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "18001234567"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "19001234567"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "19(?:0[01]|4[78])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCR : PhoneNumbers.Territory
countryCR =
    { id = "CR"
    , countryCode = Just 506
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:8\\d|90)\\d{8}|[24-8]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:[024-7]\\d\\d|1(?:0[7-9]|[1-9]\\d))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "83123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:5(?:0[01]|7[0-3])|(?:7[0-3]|8[3-9])\\d)\\d\\d|6(?:[0-4]\\d{3}|500[01]))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[059]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "40001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:210[0-6]|4\\d{3}|5100)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCU : PhoneNumbers.Territory
countryCU =
    { id = "CU"
    , countryCode = Just 53
    , internationalPrefix = Just "119"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-57]\\d{7}|[2-47]\\d{6}|[34]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "71234567"
          , possibleLengths =
                Just
                    { national =
                        "[6-8]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("4,5"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2[1-4]|7\\d)\\d{5,6}|(?:3[1-3]|4[1-35-8])\\d{6}|3[23]\\d{4,5}|4[12578]\\d{5}|4[78]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "51234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCV : PhoneNumbers.Territory
countryCV =
    { id = "CV"
    , countryCode = Just 238
    , internationalPrefix = Just "0"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-59]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2211234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\d|7[1-3]|8[1-5])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "9911234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[34][36]|5[1-389]|9\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCW : PhoneNumbers.Territory
countryCW =
    { id = "CW"
    , countryCode = Just 599
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "94351234"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:4(?:3[0-5]|4[14]|6\\d)|50\\d|7(?:2[014]|3[02-9]|4[4-9]|6[357]|77|8[7-9])|8(?:3[39]|[46]\\d|7[01]|8[57-9]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "95181234"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:5(?:[12467]\\d|3[01])|6[5-9]\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "95581234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "955\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "6001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "60[0-2]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCX : PhoneNumbers.Territory
countryCX =
    { id = "CX"
    , countryCode = Just 61
    , internationalPrefix = Just "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "1\\d{5,9}|(?:[48]\\d\\d|550)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "891641234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("8"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "8(?:51(?:0(?:01|30|59)|117)|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "412345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1800123456"
          , possibleLengths =
                Just
                    { national =
                        "7,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "180(?:0\\d{3}|2)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "1900123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "190[0-26]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "1300123456"
          , possibleLengths =
                Just
                    { national =
                        "6,8,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "550123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:14(?:5\\d|71)|550\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCY : PhoneNumbers.Territory
countryCY =
    { id = "CY"
    , countryCode = Just 357
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[279]\\d|[58]0)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22345678"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2[2-6]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "96123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9[4-79]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[09]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "80112345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[1-9]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "70012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "700\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "77123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:50|77)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryCZ : PhoneNumbers.Territory
countryCZ =
    { id = "CZ"
    , countryCode = Just 420
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-578]\\d|60|9\\d{1,4})\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "212345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2\\d|3[1257-9]|4[16-9]|5[13-9])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "601123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:60[1-8]|7(?:0[2-5]|[2379]\\d))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:0[05689]|76)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "811234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8[134]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "700123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70[01]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "910123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9[17]0\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "972123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:5\\d|7[2-4])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "93123456789"
          , possibleLengths =
                Just
                    { national =
                        "[9-12]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:3\\d{9}|6\\d{7,10})"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryDE : PhoneNumbers.Territory
countryDE =
    { id = "DE"
    , countryCode = Just 49
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1|[235-9]\\d{11}|4(?:[0-8]\\d{2,10}|9(?:[05]\\d{7}|[46][1-8]\\d{2,6})))\\d{3}|[1-35-9]\\d{6,13}|49(?:(?:[0-25]\\d|3[1-689])\\d{4,8}|4[1-8]\\d{4}|6[0-8]\\d{3,4}|7[1-7]\\d{5,8})|497[0-7]\\d{4}|49(?:[0-2579]\\d|[34][1-9])\\d{3}|[1-9]\\d{5}|[13468]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "30123456"
          , possibleLengths =
                Just
                    { national =
                        "[5-15]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("3,4"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2(?:0[1-689]|[1-3569]\\d|4[0-8]|7[1-7]|8[0-7])|5(?:0[2-8]|[124-6]\\d|[38][0-8]|[79][0-7])|6(?:0[02-9]|[1-3589]\\d|[47][0-8]|6[1-9])|7(?:0[2-8]|1[1-9]|[27][0-7]|3\\d|[4-6][0-8]|8[0-5]|9[013-7])|8(?:0[2-9]|1[0-79]|[29]\\d|3[0-46-9]|4[0-6]|5[013-9]|6[1-8]|7[0-8]|8[0-24-6])|9(?:0[6-9]|[1-4]\\d|[589][0-7]|6[0-8]|7[0-467]))\\d{4,12}|3(?:(?:[03569]\\d|4[0-79]|7[1-7]|8[1-8])\\d{4,12}|2\\d{9})|4(?:(?:[02-48]\\d|1[02-9]|5[0-6]|6[0-8]|7[0-79])\\d{4,12}|9(?:[0-37]\\d{4,9}|[4-6]\\d{4,10}))|(?:2(?:0[1-389]|1[124]|2[18]|3[14]|[4-9]1)|3(?:0\\d?|[35-9][15]|4[015])|4(?:0\\d?|[2-9]1)|[57][1-9]1|[68](?:[1-8]1|9\\d?)|9(?:06|[1-9]1))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "15123456789"
          , possibleLengths =
                Just
                    { national =
                        "10,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:5[0-25-9]\\d{8}|(?:6[023]|7\\d)\\d{7,8})"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "16412345"
          , possibleLengths =
                Just
                    { national =
                        "[4-14]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "16(?:4\\d{1,10}|[89]\\d{1,11})"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567890"
          , possibleLengths =
                Just
                    { national =
                        "[10-15]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{7,12}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234567"
          , possibleLengths =
                Just
                    { national =
                        "10,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:137[7-9]|900(?:[135]|9\\d))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "18012345"
          , possibleLengths =
                Just
                    { national =
                        "[7-14]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:3(?:7[1-6]\\d\\d|8)|80\\d{1,7})\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "70012345678"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "700\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "18500123456"
          , possibleLengths =
                Just
                    { national =
                        "[8-14]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "18(?:1\\d{5,11}|[2-9]\\d{8})"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "177991234567"
          , possibleLengths =
                Just
                    { national =
                        "12,13"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:5(?:(?:[03-68]00|113)\\d|2\\d55|7\\d99|9\\d33)|(?:6(?:013|255|399)|7(?:(?:[015]1|[69]3)3|[2-4]55|[78]99))\\d?)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryDJ : PhoneNumbers.Territory
countryDJ =
    { id = "DJ"
    , countryCode = Just 253
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:2\\d|77)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21360003"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:1[2-5]|7[45])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "77831001"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "77\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryDK : PhoneNumbers.Territory
countryDK =
    { id = "DK"
    , countryCode = Just 45
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "32123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[2-7]\\d|8[126-9]|9[1-36-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "32123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[2-7]\\d|8[126-9]|9[1-36-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryDM : PhoneNumbers.Territory
countryDM =
    { id = "DM"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[58]\\d\\d|767|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "7674201234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4]|70[1-3])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7672251234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "767(?:2(?:[2-4689]5|7[5-7])|31[5-7]|61[1-7])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryDO : PhoneNumbers.Territory
countryDO =
    { id = "DO"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[58]\\d\\d|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "8092345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "8(?:[04]9[2-9]\\d\\d|29(?:2(?:[0-59]\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\d|4[7-9])|[45]\\d\\d|6(?:[0-27-9]\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9])))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "8092345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "8[024]9[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryDZ : PhoneNumbers.Territory
countryDZ =
    { id = "DZ"
    , countryCode = Just 213
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[1-4]|[5-79]\\d|80)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "12345678"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:1\\d|2[013-79]|3[0-8]|4[0135689])\\d|9619)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "551234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:5[4-6]|7[7-9])\\d|6(?:[569]\\d|7[0-6]))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "808123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[3-689]1\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "801123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[12]1\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "983123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "98[23]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryEC : PhoneNumbers.Territory
countryEC =
    { id = "EC"
    , countryCode = Just 593
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "1800\\d{6,7}|(?:[2-7]|9\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "[2-7][2-7]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "991234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:(?:39|[57][89]|[89]\\d)\\d|6(?:[0-27-9]\\d|30))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "18001234567"
          , possibleLengths =
                Just
                    { national =
                        "10,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1800\\d{6,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "28901234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[2-7]890\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryEE : PhoneNumbers.Territory
countryEE =
    { id = "EE"
    , countryCode = Just 372
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d\\d|900)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800[2-9]\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "3212345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3[23589]|4[3-8]|6\\d|7[1-9]|88)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "51234567"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:5\\d|8[1-4])\\d{6}|5(?:(?:[02]\\d|5[0-478])\\d|1(?:[0-8]\\d|95)|6(?:4[0-4]|5[1-589]))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "7,8,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800(?:(?:0\\d\\d|1)\\d|[2-9])\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:40\\d\\d|900)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "70012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70[0-2]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryEG : PhoneNumbers.Territory
countryEG =
    { id = "EG"
    , countryCode = Just 20
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[189]\\d?|[24-6])\\d{8}|[135]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "234567890"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "1(?:3[23]\\d{6}|5\\d{6,7})|(?:(?:2[2-4]|3)\\d|4(?:0[2-5]|[578][23]|64)|6[24-689]3|8(?:2[2-57]|4[26]|6[237]|8[2-4])|9(?:2[27]|3[24]|52|6[2356]|7[2-4]))\\d{6}|5(?:(?:0[2-7]|5\\d)\\d{6}|7[23]\\d{5,6})"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "1001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1[0-25]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryEH : PhoneNumbers.Territory
countryEH =
    { id = "EH"
    , countryCode = Just 212
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[5-8]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "528812345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "528[89]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "650123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6(?:[0-79]\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[017]))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "801234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "891234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "89\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "592401234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5924[01]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryER : PhoneNumbers.Territory
countryER =
    { id = "ER"
    , countryCode = Just 291
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[178]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "8370362"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1(?:1[12568]|[24]0|55|6[146])|8\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7123456"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:17[1-3]|7\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryES : PhoneNumbers.Territory
countryES =
    { id = "ES"
    , countryCode = Just 34
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:51|[6-9]\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "810123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8(?:[1356]\\d|[28][0-8]|[47][1-9])\\d{4}|9(?:(?:(?:[135]\\d|[28][0-8]|4[1-9])\\d\\d|7(?:[124-9]\\d\\d|3(?:[0-8]\\d|9[1-9])))\\d\\d|6(?:[0-8]\\d{4}|9(?:0(?:[0-57-9]\\d\\d|6(?:0[0-8]|1[1-9]|[2-9]\\d))|[1-9]\\d{3}))))\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "612345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:6\\d|7[1-48])\\d{5}|9(?:6906(?:09|10)|7390\\d\\d))\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[89]00\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "803123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[367]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "901123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[12]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "701234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "511234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "51\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryET : PhoneNumbers.Territory
countryET =
    { id = "ET"
    , countryCode = Just 251
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:11|[2-59]\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "111112345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:11(?:1(?:1[124]|2[2-57]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8])|5(?:1[578]|44|5[0-4])|6(?:18|2[69]|39|4[5-7]|5[1-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|(?:22|55)[0-6]|33[0134689]|44[04]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:(?:11|22)[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\d)))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "911234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryFI : PhoneNumbers.Territory
countryFI =
    { id = "FI"
    , countryCode = Just 358
    , internationalPrefix = Just "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}|[1-35689]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "[5-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[13]00\\d{3,7}|20(?:0\\d{3,7}|(?:2[023]|9[89])\\d{1,6})|60(?:[12]\\d{5,6}|6\\d{7})|7(?:(?:1|3\\d)\\d{7}|5[03-9]\\d{3,7})"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "131234567"
          , possibleLengths =
                Just
                    { national =
                        "[5-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1[3-79][1-8]|[235689][1-8]\\d)\\d{2,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "412345678"
          , possibleLengths =
                Just
                    { national =
                        "[6-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:4[0-8]|50)\\d{4,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "[7-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{4,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "600123456"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[67]00\\d{5,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "10112345"
          , possibleLengths =
                Just
                    { national =
                        "[5-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:10|[23][09])\\d{4,8}|60(?:[12]\\d{5,6}|6\\d{7})|7(?:(?:1|3\\d)\\d{7}|5[03-9]\\d{3,7})|20[2-59]\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryFJ : PhoneNumbers.Territory
countryFJ =
    { id = "FJ"
    , countryCode = Just 679
    , internationalPrefix = Just "0(?:0|52)"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:0800\\d|[235-9])\\d|45)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "3212345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:3[0-5]|8[58])\\d|6(?:03|[25-7]\\d))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7012345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[279]\\d|45|5[01568]|8[034679])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "08001234567"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "0800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryFK : PhoneNumbers.Territory
countryFK =
    { id = "FK"
    , countryCode = Just 500
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-7]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "31234"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[2-47]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "51234"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[56]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryFM : PhoneNumbers.Territory
countryFM =
    { id = "FM"
    , countryCode = Just 691
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[39]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "3201234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3[2357]0[1-9]|9[2-6]\\d\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "3501234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3[2357]0[1-9]|9[2-7]\\d\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryFO : PhoneNumbers.Territory
countryFO =
    { id = "FO"
    , countryCode = Just 298
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-8]\\d|90)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "201234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:20|[34]\\d|8[19])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "211234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[27][1-9]|5\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "802123"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[257-9]\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "901123"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90(?:[13-5][15-7]|2[125-7]|99)\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "601234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6[0-36]|88)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryFR : PhoneNumbers.Territory
countryFR =
    { id = "FR"
    , countryCode = Just 33
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[1-9]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "123456789"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[1-5]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "612345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6\\d\\d|7(?:00|[3-9]\\d))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "801234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[0-5]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "891123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8[129]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "884012345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "884\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "912345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "806123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[6-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGA : PhoneNumbers.Territory
countryGA =
    { id = "GA"
    , countryCode = Just 241
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:0\\d|[2-7])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "01441234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "01\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "06031234"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:0[2-7]|[2-7])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGB : PhoneNumbers.Territory
countryGB =
    { id = "GB"
    , countryCode = Just 44
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1212345678"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("[4-8]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1(?:1(?:3[0-58]|4[0-5]|5[0-26-9]|6[0-4]|[78][0-49])|2(?:0[024-9]|1[0-7]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)|3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))|2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d)\\d{6}|1(?:(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d|7(?:(?:26(?:6[13-9]|7[0-7])|442\\d|50(?:2[0-3]|[3-68]2|76))\\d|6888[2-46-8]))\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7400123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:(?:[1-3]\\d\\d|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|8(?:[014-9]\\d|[23][0-8]))\\d|4(?:[0-46-9]\\d\\d|5(?:[0-689]\\d|7[0-57-9]))|7(?:0(?:0[01]|[1-9]\\d)|(?:[1-7]\\d|8[02-9]|9[0-689])\\d)|9(?:(?:[024-9]\\d|3[0-689])\\d|1(?:[02-9]\\d|1[028])))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "7640123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "7,9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[08]\\d{7}|800\\d{6}|8001111"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9012345678"
          , possibleLengths =
                Just
                    { national =
                        "7,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "7012345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "5612345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "56\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "5512345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3[0347]|55)\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGD : PhoneNumbers.Territory
countryGD =
    { id = "GD"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:473|[58]\\d\\d|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "4732691234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-49]|5[5-79]|73|90)|63[68]|7(?:58|84)|800|938)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "4734031234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "473(?:4(?:0[2-79]|1[04-9]|2[0-5]|58)|5(?:2[01]|3[3-8])|901)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGE : PhoneNumbers.Territory
countryGE =
    { id = "GE"
    , countryCode = Just 995
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[3-57]\\d\\d|800)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "706\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "322123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:3(?:[256]\\d|4[124-9]|7[0-4])|4(?:1\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "555123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:5(?:[14]4|5[0157-9]|68|7[0147-9]|9[1-35-9])|790)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "706123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "706\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGF : PhoneNumbers.Territory
countryGF =
    { id = "GF"
    , countryCode = Just 594
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[56]94\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "594101234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "594(?:[023]\\d|1[01]|4[03-9]|5[6-9]|6[0-3]|80|9[014])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "694201234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "694(?:[0-249]\\d|3[0-48])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGG : PhoneNumbers.Territory
countryGG =
    { id = "GG"
    , countryCode = Just 44
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1481256789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "1481[25-9]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7781123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:(?:781|839)\\d|911[17])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "7640123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "7,9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[08]\\d{7}|800\\d{6}|8001111"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9012345678"
          , possibleLengths =
                Just
                    { national =
                        "7,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "7012345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "5612345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "56\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "5512345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3[0347]|55)\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGH : PhoneNumbers.Territory
countryGH =
    { id = "GH"
    , countryCode = Just 233
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[235]\\d{3}|800)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "302345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "3(?:0(?:[237]\\d|80)|[167](?:2[0-6]|7\\d|80)|2(?:2[0-5]|7\\d|80)|3(?:2[0-3]|7\\d|80)|4(?:2[013-9]|3[01]|7\\d|80)|5(?:2[0-7]|7\\d|80)|8(?:2[0-2]|7\\d|80)|9(?:[28]0|7\\d))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "231234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2[0346-8]\\d|5(?:[0457]\\d|6[01]))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGI : PhoneNumbers.Territory
countryGI =
    { id = "GI"
    , countryCode = Just 350
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[25]\\d\\d|629)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "20012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:(?:00\\d|2(?:2[2457]|50))\\d|1(?:6[24-7]\\d|90[0-2]))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "57123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:5[46-8]\\d|629)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGL : PhoneNumbers.Territory
countryGL =
    { id = "GL"
    , countryCode = Just 299
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:19|[2-689]\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "321000"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:19|3[1-7]|6[14689]|8[14-79]|9\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "221234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[25][1-9]|4[2-9])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "801234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "381234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "3[89]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGM : PhoneNumbers.Territory
countryGM =
    { id = "GM"
    , countryCode = Just 220
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "5661234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:4(?:[23]\\d\\d|4(?:1[024679]|[6-9]\\d))|5(?:54[0-7]|6[67]\\d|7(?:1[04]|2[035]|3[58]|48))|8\\d{3})\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "3012345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[23679]\\d|5[01])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGN : PhoneNumbers.Territory
countryGN =
    { id = "GN"
    , countryCode = Just 224
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:30|6\\d\\d|722)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "30241234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "30(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "601123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6[02356]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "722123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "722\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGP : PhoneNumbers.Territory
countryGP =
    { id = "GP"
    , countryCode = Just 590
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:590|69\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "590201234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "590(?:0[1-68]|1[0-2]|2[0-68]|3[1289]|4[0-24-9]|5[3-579]|6[0189]|7[08]|8[0-689]|9\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "690001234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGQ : PhoneNumbers.Territory
countryGQ =
    { id = "GQ"
    , countryCode = Just 240
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:222|(?:3\\d|55|[89]0)\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "333091234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "3(?:3(?:[0-24-9]\\d[46]|3\\d[7-9])|5\\d\\d[7-9])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "222123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:222|55[015])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d[1-9]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90\\d[1-9]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGR : PhoneNumbers.Territory
countryGR =
    { id = "GR"
    , countryCode = Just 30
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[268]\\d|[79]0)\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2123456789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:1\\d\\d|2(?:2[1-46-9]|[36][1-8]|4[1-7]|5[1-4]|7[1-5]|[89][1-9])|3(?:1\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\d|[269][1-6]|3[1245]|4[1-7]|5[13-9]|7[14]|8[1-5])|7(?:1\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\d|2[1-5]|[34][1-4]|9[1-57]))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "6912345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6(?:8[57-9]|9\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9091234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[19]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "8011234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:0[16]|12|25)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "7012345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGT : PhoneNumbers.Territory
countryGT =
    { id = "GT"
    , countryCode = Just 502
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1\\d{3}|[2-7])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22456789"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[267][2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "51234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[3-5]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "18001112222"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "18[01]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "19001112222"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "19\\d{9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGU : PhoneNumbers.Territory
countryGU =
    { id = "GU"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[58]\\d\\d|671|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "6713001234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "6713001234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGW : PhoneNumbers.Territory
countryGW =
    { id = "GW"
    , countryCode = Just 245
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[49]\\d{8}|4\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "443201234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "443\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "955012345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:5\\d|6[569]|77)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "4012345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "40\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryGY : PhoneNumbers.Territory
countryGY =
    { id = "GY"
    , countryCode = Just 592
    , internationalPrefix = Just "001"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:(?:[2-46]\\d|77)\\d|862)\\d|9008)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2201234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\d|7[0-24-79])|3(?:2[25-9]|3\\d)|4(?:4[0-24]|5[56])|77[1-57])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "6091234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "2891234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:289|862)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9008123"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9008\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryHK : PhoneNumbers.Territory
countryHK =
    { id = "HK"
    , countryCode = Just 852
    , internationalPrefix = Just "00(?:30|5[09]|[126-9]?)"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "8[0-46-9]\\d{6,7}|9\\d{4}(?:\\d(?:\\d(?:\\d{4})?)?)?|(?:[235-79]\\d|46)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:[13-8]\\d|2[013-9]|9[0-24-9])\\d|3(?:(?:[1569][0-24-9]|4[0-246-9]|7[0-24-69])\\d|8(?:4[04]|9\\d))|58(?:0[1-8]|1[2-9]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "51234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:46(?:0[0-6]|1[0-2]|4[0-57-9])|5(?:(?:[1-59][0-46-9]|6[0-4689])\\d|7(?:[0-2469]\\d|30))|6(?:(?:0[1-9]|[13-59]\\d|[68][0-57-9]|7[0-79])\\d|2(?:[0-57-9]\\d|6[01]))|707[1-5]|848[01]|9(?:(?:0[1-9]|1[02-9]|[358][0-8]|[467]\\d)\\d|2(?:[0-8]\\d|9[03-9])))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "71123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:1(?:0[0-38]|1[0-3679]|3[013]|69|9[136])|2(?:[02389]\\d|1[18]|7[27-9])|3(?:[0-38]\\d|7[0-369]|9[2357-9])|47\\d|5(?:[178]\\d|5[0-5])|6(?:0[0-7]|2[236-9]|[35]\\d)|7(?:[27]\\d|8[7-9])|8(?:[23689]\\d|7[1-9])|9(?:[025]\\d|6[0-246-8]|7[0-36-9]|8[238]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90012345678"
          , possibleLengths =
                Just
                    { national =
                        "[5-8],11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900(?:[0-24-9]\\d{7}|3\\d{1,4})"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "81123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:1[0-4679]\\d|2(?:[0-36]\\d|7[0-4])|3(?:[034]\\d|2[09]|70))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "30161234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "30(?:0[1-9]|[15-7]\\d|2[047]|89)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryHN : PhoneNumbers.Territory
countryHN =
    { id = "HN"
    , countryCode = Just 504
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[237-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:2(?:0[019]|1[1-36]|[23]\\d|4[04-6]|5[57]|64|7[0135689]|8[01346-9]|9[0-2])|4(?:07|2[3-59]|3[13-689]|4[0-68]|5[1-35])|5(?:08|16|4[03-5]|5\\d|6[4-6]|74|80)|6(?:[056]\\d|17|3[04]|4[0-378]|[78][0-8]|9[01])|7(?:6[46-9]|7[02-9]|8[034])|8(?:79|8[0-357-9]|9[1-57-9]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "91234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[37-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryHR : PhoneNumbers.Territory
countryHR =
    { id = "HR"
    , countryCode = Just 385
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[24-69]\\d|3[0-79])\\d{7}|80\\d{5,7}|[1-79]\\d{7}|6\\d{5,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "12345678"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "1\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\d{6,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "921234567"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:(?:01|[12589]\\d)\\d|7(?:[0679]\\d|51))\\d{5}|98\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "[7-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[01]\\d{4,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "611234"
          , possibleLengths =
                Just
                    { national =
                        "[6-8]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6[01459]\\d{6}|6[01]\\d{4,5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "74123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[45]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "62123456"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:62\\d?|72)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryHT : PhoneNumbers.Territory
countryHT =
    { id = "HT"
    , countryCode = Just 509
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-489]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22453300"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:2\\d|5[1-5]|81|9[149])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "34101234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[34]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "98901234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:[67][0-4]|8[0-3589]|9\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryHU : PhoneNumbers.Territory
countryHU =
    { id = "HU"
    , countryCode = Just 36
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "06"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2357]\\d{8}|[1-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[48]0\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "12345678"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1\\d|[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6[23689]|8[2-57-9]|9[2-69])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "201234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[257]0|3[01])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[48]0\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9[01]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "211234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "21\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "381234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "38\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryID : PhoneNumbers.Territory
countryID =
    { id = "ID"
    , countryCode = Just 62
    , internationalPrefix = Just "0(?:0[17-9]|10(?:00|1[67]))"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[1-36]|8\\d{5})\\d{6}|[1-9]\\d{8,10}|[2-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8071\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "218350123"
          , possibleLengths =
                Just
                    { national =
                        "[7-11]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("5,6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "2(?:[124]\\d{7,8}|(?:[35][1-4]|6[0-8]|7[1-6]|8\\d|9[1-8])\\d{5,8})|(?:3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|7(?:02|[125][1-9]|[36]\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\d{5,8}|6(?:1(?:[0-8]\\d{4,7}|9\\d{4,8})|(?:[25]\\d|3[1-69]|4[1-6])\\d{5,8})|2(?:1(?:14|500)|2\\d{3})\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "812345678"
          , possibleLengths =
                Just
                    { national =
                        "[9-12]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8[1-35-9]\\d{7,10}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "[8-11]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:177\\d|800)\\d{5,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "8091234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "809\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "8041234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "804\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "8071123456"
          , possibleLengths =
                Just
                    { national =
                        "7,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1500|8071\\d{3})\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryIE : PhoneNumbers.Territory
countryIE =
    { id = "IE"
    , countryCode = Just 353
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[148]\\d{9}|[124-9]\\d{8}|[124-69]\\d{7}|[24-69]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "18[59]0\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2212345"
          , possibleLengths =
                Just
                    { national =
                        "[7-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("5,6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1\\d{2,3}|2(?:[13]\\d\\d|[24-9])|4(?:0[24]|(?:(?:[1-469]|8[0-46-9])\\d|5)\\d|7)|5(?:0[45]|(?:1|[23679]\\d)\\d|8)|6(?:[237-9]|[4-6]\\d\\d)|7[14]\\d\\d|9(?:[04]\\d\\d|[35-9]))\\d{5}|[269]1\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "850123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:22|[35-9]\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1800123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "1520123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "15(?:1[2-8]|[2-8]0|9[089])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "1850123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "18[59]0\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "700123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "700\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "761234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "76\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "818123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "818\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "8551234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8[35-9]5\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryIL : PhoneNumbers.Territory
countryIL =
    { id = "IL"
    , countryCode = Just 972
    , internationalPrefix = Just "0(?:0|1[2-9])"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1700\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21234567"
          , possibleLengths =
                Just
                    { national =
                        "8,11,12"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:153\\d\\d?|[2-489])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "502345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:(?:[0-489][2-9]|6\\d)\\d|5(?:01|2[2-5]|3[23]|4[45]|5[05689]|6[6-8]|7[0-267]|8[7-9]|9[1-9]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1800123456"
          , possibleLengths =
                Just
                    { national =
                        "7,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:255|80[019]\\d{3})\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "1919123456"
          , possibleLengths =
                Just
                    { national =
                        "8,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:2(?:00\\d\\d|12)|9(?:0[01]|19)\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "1700123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1700\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "771234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:(?:18|2[23]|3[237]|47|6[58]|7\\d|9[2357-9])\\d|8(?:2\\d|33|55|77|81))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "1599123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1599\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "15112340000"
          , possibleLengths =
                Just
                    { national =
                        "11,12"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "151\\d{8,9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryIM : PhoneNumbers.Territory
countryIM =
    { id = "IM"
    , countryCode = Just 44
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1624|(?:[3578]\\d|90)\\d\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1624756789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "1624[5-8]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7924123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:4576|[59]24\\d|624[0-4689])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8081624567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "808162\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9016247890"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8(?:4(?:40[49]06|5624\\d)|7(?:0624|2299)\\d)|90[0167]624\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "7012345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "5612345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "56\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "5512345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3(?:(?:08162|3\\d{4}|7(?:0624|2299))\\d|4(?:40[49]06|5624\\d))|55\\d{5})\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryIN : PhoneNumbers.Territory
countryIN =
    { id = "IN"
    , countryCode = Just 91
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:00800|1\\d{0,5}|[2-9]\\d\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "[8-13]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:00800\\d|1(?:600|8(?:0[03]\\d\\d|6(?:0|[12]\\d\\d))\\d))\\d{6}|1800\\d{4,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "7410410123"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("[6-8]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1(?:1[2-7]\\d\\d|2(?:[0-249][2-7]\\d|[35-8]\\d[2-7])|3(?:[0-25][2-7]\\d|[346-9]\\d[2-7])|4(?:[145][2-7]\\d|[236-9]\\d[2-7])|[59](?:[0235-9]\\d[2-7]|[14][2-7]\\d)|6(?:[014][2-7]\\d|[235-9]\\d[2-7])|7(?:(?:0[24]|[1257][2-7])\\d|[34689]\\d[2-7])|8(?:[01346][2-7]\\d|[257-9]\\d[2-7]))|2(?:[02][2-7]\\d\\d|1(?:[134689]\\d[2-7]|[257][2-7]\\d)|3(?:[013][2-7]\\d|[24-8]\\d[2-7])|4(?:[01][2-7]\\d|[2-8]\\d[2-7])|5(?:[0137][2-7]\\d|[25689]\\d[2-7])|6(?:[0158][2-7]\\d|[2-4679]\\d[2-7])|7(?:[13-79]\\d[2-7]|8[2-7]\\d)|8(?:(?:0[13468]|[1568][2-7])\\d|[2-479]\\d[2-7])|9(?:(?:0\\d|[14][2-7])\\d|[235-9]\\d[2-7]))|3(?:(?:01|1[79])\\d[2-7]|2(?:[1-5]\\d[2-7]|6[2-7]\\d)|3[2-7]\\d\\d|4(?:[13][2-7]\\d|2(?:[0189][2-7]|[2-7]\\d)|[5-8]\\d[2-7])|5(?:[125689]\\d[2-7]|[34][2-7]\\d)|6(?:[01489][2-7]\\d|[235-7]\\d[2-7])|7(?:[02-46][2-7]\\d|[157-9]\\d[2-7])|8(?:(?:0\\d|[159][2-7])\\d|[2-46-8]\\d[2-7]))|4(?:[04][2-7]\\d\\d|1(?:[14578]\\d[2-7]|[36][2-7]\\d)|2(?:(?:0[24]|[1-47][2-7])\\d|[5689]\\d[2-7])|3(?:[15][2-7]\\d|[2-467]\\d[2-7])|5(?:[12][2-7]\\d|[4-7]\\d[2-7])|6(?:[0-26-9][2-7]\\d|[35]\\d[2-7])|7(?:(?:[014-9][2-7]|2[2-8])\\d|3\\d[2-7])|8(?:[013-57][2-7]\\d|[2689]\\d[2-7])|9(?:[014-7][2-7]\\d|[2389]\\d[2-7]))|5(?:1(?:[025][2-7]\\d|[146-9]\\d[2-7])|2(?:[14-8]\\d[2-7]|2[2-7]\\d)|3(?:[1346]\\d[2-7]|[25][2-7]\\d)|4(?:[14-69]\\d[2-7]|[28][2-7]\\d)|5(?:(?:1[2-7]|2[1-7])\\d|[46]\\d[2-7])|6(?:[146-9]\\d[2-7]|[25][2-7]\\d)|7(?:1[2-7]\\d|[2-4]\\d[2-7])|8(?:1[2-7]\\d|[2-8]\\d[2-7])|9(?:[15][2-7]\\d|[246]\\d[2-7]))|6(?:1(?:[1358]\\d[2-7]|2[2-7]\\d)|2(?:1[2-7]\\d|[2457]\\d[2-7])|3(?:1[2-7]\\d|[2-4]\\d[2-7])|4(?:1[2-7]\\d|[235-7]\\d[2-7])|5(?:[17][2-7]\\d|[2-689]\\d[2-7])|6(?:[13][2-7]\\d|[24578]\\d[2-7])|7(?:1[2-7]\\d|[235689]\\d[2-7]|4(?:[0189][2-7]|[2-7]\\d))|8(?:0[2-7]\\d|[1-6]\\d[2-7]))|7(?:1(?:[013-9]\\d[2-7]|2[2-7]\\d)|2(?:[0235-9]\\d[2-7]|[14][2-7]\\d)|3(?:[134][2-7]\\d|[2679]\\d[2-7])|4(?:[1-35689]\\d[2-7]|[47][2-7]\\d)|5(?:[15][2-7]\\d|[2-46-9]\\d[2-7])|[67](?:[02-9]\\d[2-7]|1[2-7]\\d)|8(?:(?:[013-7]\\d|2[0-6])[2-7]|8(?:[0189][2-7]|[2-7]\\d))|9(?:[0189]\\d[2-7]|[2-7]\\d\\d))|8(?:0[2-7]\\d\\d|1(?:[1357-9]\\d[2-7]|6[2-7]\\d)|2(?:[014][2-7]\\d|[235-8]\\d[2-7])|3(?:[03-57-9]\\d[2-7]|[126][2-7]\\d)|(?:4[0-24-9]|5\\d)\\d[2-7]|6(?:[136][2-7]\\d|[2457-9]\\d[2-7])|7(?:[078][2-7]\\d|[1-6]\\d[2-7])|8(?:[1256]\\d[2-7]|[34][2-7]\\d)|9(?:1[2-7]\\d|[2-4]\\d[2-7])))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "8123456789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6(?:(?:0(?:0[0-3569]|26|33)|2(?:[06]\\d|3[02589]|8[0-479]|9[0-79])|9(?:0[019]|13))\\d|1279|3(?:(?:0[0-79]|6[0-4679]|7[0-24-9]|[89]\\d)\\d|5(?:0[0-6]|[1-9]\\d)))|7(?:(?:0\\d\\d|19[0-5])\\d|2(?:(?:[0235-79]\\d|[14][017-9])\\d|8(?:[0-59]\\d|[6-8][089]))|3(?:(?:[05-8]\\d|3[017-9])\\d|1(?:[089]\\d|11|7[02-8])|2(?:[0-49][089]|[5-8]\\d)|4(?:[07-9]\\d|11)|9(?:[016-9]\\d|[2-5][089]))|4(?:0\\d\\d|1(?:[015-9]\\d|[2-4][089])|[29](?:[0-7][089]|[89]\\d)|3(?:[0-8][089]|9\\d)|[47](?:[089]\\d|11|7[02-8])|[56]\\d[089]|8(?:[0-24-7][089]|[389]\\d))|5(?:(?:[0346-8]\\d|5[017-9])\\d|1(?:[07-9]\\d|11)|2(?:[04-9]\\d|[1-3][089])|9(?:[0-6][089]|[7-9]\\d))|6(?:0(?:[0-47]\\d|[5689][089])|(?:1[0-257-9]|[6-9]\\d)\\d|2(?:[0-4]\\d|[5-9][089])|3(?:[02-8][089]|[19]\\d)|4\\d[089]|5(?:[0-367][089]|[4589]\\d))|7(?:0(?:0[02-9]|[13-7][089]|[289]\\d)|[1-9]\\d\\d)|8(?:[0-79]\\d\\d|8(?:[089]\\d|11|7[02-9]))|9(?:[089]\\d\\d|313|7(?:[02-8]\\d|9[07-9])))|8(?:0(?:(?:[01589]\\d|6[67])\\d|7(?:[02-8]\\d|9[04-9]))|1(?:[0-57-9]\\d\\d|6(?:[089]\\d|7[02-8]))|2(?:[014](?:[089]\\d|7[02-8])|[235-9]\\d\\d)|3(?:[03-57-9]\\d\\d|[126](?:[089]\\d|7[02-8]))|[45]\\d{3}|6(?:[02457-9]\\d\\d|[136](?:[089]\\d|7[02-8]))|7(?:(?:0[07-9]|[1-69]\\d)\\d|[78](?:[089]\\d|7[02-8]))|8(?:[0-25-9]\\d\\d|3(?:[089]\\d|7[02-8])|4(?:[0489]\\d|7[02-8]))|9(?:[02-9]\\d\\d|1(?:[0289]\\d|7[02-8])))|9\\d{4})\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1800123456"
          , possibleLengths =
                Just
                    { national =
                        "[8-13]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:00800\\d|1(?:600|80[03]\\d{3}))\\d{6}|1800\\d{4,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "1861123456789"
          , possibleLengths =
                Just
                    { national =
                        "13"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "186[12]\\d{9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "18603451234"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1860\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "1409305260"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "140\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryIO : PhoneNumbers.Territory
countryIO =
    { id = "IO"
    , countryCode = Just 246
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "3\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "3709100"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "37\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "3801234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "38\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryIQ : PhoneNumbers.Territory
countryIQ =
    { id = "IQ"
    , countryCode = Just 964
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1|[2-6]\\d?|7\\d\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "12345678"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "1\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\d{6,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7912345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[3-9]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryIR : PhoneNumbers.Territory
countryIR =
    { id = "IR"
    , countryCode = Just 98
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "4,5,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:4(?:11[1-7]|440)\\d{5}|6(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19]))"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2123456789"
          , possibleLengths =
                Just
                    { national =
                        "6,7,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("4,5,8"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])\\d{4}|94(?:(?:000|(?:11|2\\d)\\d|30[01])\\d|4(?:111|40\\d)))\\d{4}|(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])(?:[16]|[289]\\d?)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "9123456789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:(?:0(?:[1-35]\\d|44)|(?:[13]\\d|2[0-2])\\d)\\d|9(?:(?:[01]\\d|44)\\d|510|8(?:1[01]|88)|9(?:0[013]|1[0134]|21|77|9[6-9])))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "9932123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "993\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "9601"
          , possibleLengths =
                Just
                    { national =
                        "4,5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "96(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19])"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryIS : PhoneNumbers.Territory
countryIS =
    { id = "IS"
    , countryCode = Just 354
    , internationalPrefix = Just "00|1(?:0(?:01|[12]0)|100)"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:38\\d|[4-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "4101234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:4(?:1[0-24-69]|2[0-7]|[37][0-8]|4[0-245]|5[0-68]|6\\d|8[0-36-8])|5(?:05|[156]\\d|2[02578]|3[0-579]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|87[23])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "6111234"
          , possibleLengths =
                Just
                    { national =
                        "7,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:38[589]\\d\\d|6(?:1[1-8]|2[0-6]|3[027-9]|4[014679]|5[0159]|6[0-69]|70|8[06-8]|9\\d)|7(?:5[057]|[6-8]\\d|9[0-3])|8(?:2[0-59]|[3469]\\d|5[1-9]|8[28]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9011234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "4921234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "49\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "8091234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "809\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "6891234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:689|8(?:7[0189]|80)|95[48])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryIT : PhoneNumbers.Territory
countryIT =
    { id = "IT"
    , countryCode = Just 39
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "0\\d{6}(?:\\d{4})?|3[0-8]\\d{9}|(?:[0138]\\d?|55)\\d{8}|[08]\\d{5}(?:\\d{2})?"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "848\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "0212345678"
          , possibleLengths =
                Just
                    { national =
                        "[6-11]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "0(?:(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d|6(?:[0-57-9]\\d\\d|6(?:[0-8]\\d|9[0-79])))\\d{1,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "3123456789"
          , possibleLengths =
                Just
                    { national =
                        "[9-11]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "33\\d{9}|3[1-9]\\d{8}|3[2-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "6,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80(?:0\\d{3}|3)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "899123456"
          , possibleLengths =
                Just
                    { national =
                        "6,[8-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:0878|1(?:44|6[346])\\d)\\d\\d|89(?:2|(?:4[5-9]|(?:5[5-9]|9)\\d\\d)\\d))\\d{3}|89[45][0-4]\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "848123456"
          , possibleLengths =
                Just
                    { national =
                        "6,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "84(?:[08]\\d{3}|[17])\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "1781234567"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:78\\d|99)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "5512345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "55\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryJE : PhoneNumbers.Territory
countryJE =
    { id = "JE"
    , countryCode = Just 44
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1534|(?:[3578]\\d|90)\\d\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1534456789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "1534[0-24-8]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7797712345"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97[7-9]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "7640123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8007354567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80(?:07(?:35|81)|8901)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9018105678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "7015115678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "701511\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "5612345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "56\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "5512345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryJM : PhoneNumbers.Territory
countryJM =
    { id = "JM"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[58]\\d\\d|658|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "8765230123"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:658[2-9]\\d\\d|876(?:5(?:0[12]|1[0-468]|2[35]|63)|6(?:0[1-3579]|1[0237-9]|[23]\\d|40|5[06]|6[2-589]|7[05]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\d|9[2-468])))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "8762101234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "876(?:(?:2[14-9]|[348]\\d)\\d|5(?:0[3-9]|[2-57-9]\\d|6[0-24-9])|7(?:0[07]|7\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryJO : PhoneNumbers.Territory
countryJO =
    { id = "JO"
    , countryCode = Just 962
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:(?:[268]|7\\d)\\d|32|53)\\d|900)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "62001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:6(?:2[0-35-9]|3[0-578]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\d|4[0-3]|[57][023]|6[03])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2[05]0|3(?:00|33)|4(?:0[0-25]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[178]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[0239]))|87(?:[029]0|7[08]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "790123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:55[0-49]|(?:7[025-9]|[89][0-25-9])\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "746612345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "74(?:66|77)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "85012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "85\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "700123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "88101234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:10|8\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryJP : PhoneNumbers.Territory
countryJP =
    { id = "JP"
    , countryCode = Just 81
    , internationalPrefix = Just "010"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "[8-17]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "00(?:(?:37|66)\\d{4,11}|777(?:[01]|(?:5|8\\d)\\d)|882[1245]\\d\\d)\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "312345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\d|4(?:[2-578]\\d|6[02-8]|9[2-59])|5(?:[2-589]\\d|6[1-9]|7[2-8])|7(?:[25-9]\\d|3[4-9]|4[02-9])|8(?:[2679]\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\d|[679][1-9]))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "9012345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[7-9]0[1-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "2012345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "20\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "120123456"
          , possibleLengths =
                Just
                    { national =
                        "[8-17]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:00(?:(?:37|66)\\d{4,11}|777(?:[01]|(?:5|8\\d)\\d)|882[1245]\\d\\d)|(?:120|800\\d)\\d{4})\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "990123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "990\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "601234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "60\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "5012345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "50[1-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "570123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "570\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryKE : PhoneNumbers.Territory
countryKE =
    { id = "KE"
    , countryCode = Just 254
    , internationalPrefix = Just "000"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:2|80)0\\d?|[4-7]\\d\\d|900)\\d{6}|[4-6]\\d{6,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "202012345"
          , possibleLengths =
                Just
                    { national =
                        "[7-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "20\\d{6,7}|(?:4[0-6]|5\\d|6[0-24-9])\\d{7}|(?:4[0245]|6[014-9])\\d{6}|5[1-79]\\d{5,6}|(?:4[245]|6[01457-9])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "712123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800223456"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800[24-8]\\d{5,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900223456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[02-9]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryKG : PhoneNumbers.Territory
countryKG =
    { id = "KG"
    , countryCode = Just 996
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[235-7]\\d|99)\\d{7}|800\\d{6,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "312123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("5,6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:3(?:1(?:[256]\\d|3[1-9]|47)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\d)|5(?:22|3[4-7]|59|6\\d)|6(?:22|5[35-7]|6\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\d)|9(?:22|4[1-8]|6\\d))|6(?:09|12|2[2-4])\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "700123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:0[0-35]|2\\d)|5[0-24-7]\\d|7(?:[07]\\d|55)|99[69])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryKH : PhoneNumbers.Territory
countryKH =
    { id = "KH"
    , countryCode = Just 855
    , internationalPrefix = Just "00[14-9]"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "1\\d{9}|[1-9]\\d{7,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "23756789"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2(?:3(?:4(?:[2-4]|[56]\\d)|[568]\\d\\d)|[4-6](?:4[56]|[56]\\d)\\d)|(?:3[2-6]|4[2-4]|[5-7][2-5])(?:4[56]|[56]\\d)\\d)\\d{4}|(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])[236-9]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "91234567"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:(?:1[28]|9[67])\\d|8(?:[013-79]|8\\d))\\d|(?:2[3-6]|4[2-4]|[56][2-5])48|3(?:[18]\\d\\d|[2-6]48)|7(?:(?:[07-9]|[16]\\d)\\d|[2-5]48))\\d{5}|(?:1\\d|6[016-9]|9[0-57-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1800123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1800(?:1\\d|2[019])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "1900123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1900(?:1\\d|2[09])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryKI : PhoneNumbers.Territory
countryKI =
    { id = "KI"
    , countryCode = Just 686
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "31234"
          , possibleLengths =
                Just
                    { national =
                        "5,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[24]\\d|3[1-9]|50|65(?:02[12]|12[56]|22[89]|[3-5]00)|7(?:27\\d\\d|3100|5(?:02[12]|12[56]|22[89]|[34](?:00|81)|500))|8[0-5])\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "72001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6(?:200[01]|30[01]\\d)|7(?:200[01]|3(?:0[0-5]\\d|140)))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "30010000"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "30(?:0[01]\\d\\d|12(?:11|20))\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryKM : PhoneNumbers.Territory
countryKM =
    { id = "KM"
    , countryCode = Just 269
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[3478]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "7712345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[4-7]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "3212345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[34]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "8001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryKN : PhoneNumbers.Territory
countryKN =
    { id = "KN"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[58]\\d\\d|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "8692361234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "869(?:2(?:29|36)|302|4(?:6[015-9]|70))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "8697652917"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "869(?:5(?:5[6-8]|6[5-7])|66\\d|76[02-7])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryKP : PhoneNumbers.Territory
countryKP =
    { id = "KP"
    , countryCode = Just 850
    , internationalPrefix = Just "00|99"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:19\\d|2)\\d|85)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:[0-24-9]\\d\\d|3(?:[0-79]\\d|8[02-9]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2\\d|85)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "1921234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "19[1-3]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryKR : PhoneNumbers.Territory
countryKR =
    { id = "KR"
    , countryCode = Just 82
    , internationalPrefix = Just "00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:00[1-9]\\d{2,4}|[12]|5\\d{3})\\d{7}|(?:(?:00|[13-6])\\d|70)\\d{8}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "[11-14]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "00(?:3(?:08|68\\d)|798\\d{1,3})\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22123456"
          , possibleLengths =
                Just
                    { national =
                        "5,6,[8-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("3,4,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2|3[1-3]|[46][1-4]|5[1-5])[1-9]\\d{6,7}|(?:3[1-3]|[46][1-4]|5[1-5])1\\d{2,3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "1000000000"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1[0-26-9]\\d{7,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "1523456789"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "15\\d{7,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "801234567"
          , possibleLengths =
                Just
                    { national =
                        "9,[11-14]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:00(?:3(?:08|68\\d)|798\\d{1,3})|80\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "602345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "60[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5012345678"
          , possibleLengths =
                Just
                    { national =
                        "10,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "50\\d{8,9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "7012345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "15441234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:5(?:22|44|66|77|88|99)|6(?:[07]0|44|6[16]|88)|8(?:00|33|55|77|99))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryKW : PhoneNumbers.Territory
countryKW =
    { id = "KW"
    , countryCode = Just 965
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:18|[2569]\\d\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22345678"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:[23]\\d\\d|4(?:[1-35-9]\\d|44)|5(?:0[034]|[2-46]\\d|5[1-3]|7[1-7]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "50012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:5(?:(?:[05]\\d|1[0-7]|6[56])\\d|2(?:22|5[25]))|6(?:(?:0[034679]|5[015-9]|6\\d)\\d|222|7(?:0[013-9]|[67]\\d)|9(?:[069]\\d|3[039]))|9(?:(?:0[09]|22|4[01479]|55|6[0679]|8[057-9]|9\\d)\\d|11[01]|7(?:02|[1-9]\\d)))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1801234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "18\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryKY : PhoneNumbers.Territory
countryKY =
    { id = "KY"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:345|[58]\\d\\d|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "3452221234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "345(?:2(?:22|44)|444|6(?:23|38|40)|7(?:4[35-79]|6[6-9]|77)|8(?:00|1[45]|25|[48]8)|9(?:14|4[035-9]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "3453231234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "345(?:32[1-9]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|9(?:1[67]|2[2-9]|3[689]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "3458491234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "345849\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:345976|900[2-9]\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryKZ : PhoneNumbers.Territory
countryKZ =
    { id = "KZ"
    , countryCode = Just 7
    , internationalPrefix = Just "810"
    , nationalPrefix = Just "8"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:33622|(?:7\\d|80)\\d{3})\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "751\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "7123456789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:33622|7(?:1(?:0(?:[23]\\d|4[0-3]|59|63)|1(?:[23]\\d|4[0-79]|59)|2(?:[23]\\d|59)|3(?:2\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\d|3[013-9]|5[1-9])|5(?:2\\d|3[1-9]|4[0-7]|59)|6(?:[2-4]\\d|5[19]|61)|72\\d|8(?:[27]\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\d|4[46-9]|5[3469])|2(?:2\\d|3[0679]|46|5[12679])|3(?:[2-4]\\d|5[139])|4(?:2\\d|3[1-35-9]|59)|5(?:[23]\\d|4[0-246-8]|59|61)|6(?:2\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\d|40|5[279])|8(?:[23]\\d|4[0-3]|59)|9(?:2\\d|3[124578]|59))))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7710009998"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:0[0-2578]|47|6[02-4]|7[15-8]|85)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "8091234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "809\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "8081234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "808\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "7511234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "751\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryLA : PhoneNumbers.Territory
countryLA =
    { id = "LA"
    , countryCode = Just 856
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:2\\d|3)\\d{8}|(?:[235-8]\\d|41)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21212862"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2[13]|[35-7][14]|41|8[1468])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "2023123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "20(?:[29]\\d|5[24-689]|7[6-8])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "301234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "30\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryLB : PhoneNumbers.Territory
countryLB =
    { id = "LB"
    , countryCode = Just 961
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[7-9]\\d{7}|[13-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1123456"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:[14-69]\\d|8[02-9])\\d|7(?:[2-57]\\d|62|8[0-7]|9[04-9]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "71123456"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:3|81)\\d|7(?:[01]\\d|6[013-9]|8[89]|9[1-3]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9[01]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "80123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryLC : PhoneNumbers.Territory
countryLC =
    { id = "LC"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[58]\\d\\d|758|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "7584305678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "758(?:4(?:30|5\\d|6[2-9]|8[0-2])|57[0-2]|638)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7582845678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\d|3[01]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryLI : PhoneNumbers.Territory
countryLI =
    { id = "LI"
    , countryCode = Just 423
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[2378]|6\\d\\d)\\d|90)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2345678"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:01|1[27]|3\\d|6[02-578]|96)|3(?:7[0135-7]|8[048]|9[0269]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "660234567"
          , possibleLengths =
                Just
                    { national =
                        "7,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6(?:5(?:09|1\\d|20)|6(?:0[0-6]|10|2[06-9]|39))\\d|7(?:[37-9]\\d|42|56))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002222"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80(?:02[28]|9\\d\\d)\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002222"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90(?:02[258]|1(?:23|3[14])|66[136])\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "8702812"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "870(?:28|87)\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "697861234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "697(?:42|56|[78]\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryLK : PhoneNumbers.Territory
countryLK =
    { id = "LK"
    , countryCode = Just 94
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[1-7]\\d|[89]1)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "112345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:[189]1|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "712345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[0-25-8]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "197312345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1973\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryLR : PhoneNumbers.Territory
countryLR =
    { id = "LR"
    , countryCode = Just 231
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:2|33|5\\d|77|88)\\d{7}|[45]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21234567"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2\\d{3}|33333)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "770123456"
          , possibleLengths =
                Just
                    { national =
                        "7,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:330|555|(?:77|88)\\d)\\d|4[67])\\d{5}|5\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "332021234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "332(?:02|[34]\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryLS : PhoneNumbers.Territory
countryLS =
    { id = "LS"
    , countryCode = Just 266
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[256]\\d\\d|800)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "50123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[56]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80021234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800[256]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryLT : PhoneNumbers.Territory
countryLT =
    { id = "LT"
    , countryCode = Just 370
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "8"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[3469]\\d|52|[78]0)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "31234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3[1478]|4[124-6]|52)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "61234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:0[0239]|10)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "80812345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "808\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "70012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "700\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "70712345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70[67]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryLU : PhoneNumbers.Territory
countryLU =
    { id = "LU"
    , countryCode = Just 352
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2457-9]\\d{3,10}|3(?:[0-46-9]\\d{2,9}|5(?:[013-9]\\d{1,8}|2\\d{1,3}))|6\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "27123456"
          , possibleLengths =
                Just
                    { national =
                        "[4-11]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:2[2-9]|[457]\\d)\\d|3(?:[0-46-9]\\d|5[013-9])|8(?:0[2-9]|[13-9]\\d)|9(?:0[89]|[2-579]\\d))\\d{1,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "628123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6(?:[269][18]|5[158]|7[189]|81)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[015]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "80112345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "801\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "20201234"
          , possibleLengths =
                Just
                    { national =
                        "[4-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "20(?:1\\d{5}|[2-689]\\d{1,7})"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryLV : PhoneNumbers.Territory
countryLV =
    { id = "LV"
    , countryCode = Just 371
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[268]\\d|90)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "63123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "21234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "81123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "81\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryLY : PhoneNumbers.Territory
countryLY =
    { id = "LY"
    , countryCode = Just 218
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2569]\\d|71)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "212345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2[13-5]|5[1347]|6[1-479]|71)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "912345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9[1-6]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMA : PhoneNumbers.Territory
countryMA =
    { id = "MA"
    , countryCode = Just 212
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[5-8]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "520123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:2(?:[015-79]\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])|3(?:[0-48]\\d|[57][2-9]|6[2-8]|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "650123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6(?:[0-79]\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[017]))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "801234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "891234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "89\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "592401234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5924[01]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMC : PhoneNumbers.Territory
countryMC =
    { id = "MC"
    , countryCode = Just 377
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[349]|6\\d)\\d\\d|870)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "870\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "99123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:870|9[2-47-9]\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "612345678"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:3|6\\d)\\d\\d|4(?:4\\d|5[1-9]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "90123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMD : PhoneNumbers.Territory
countryMD =
    { id = "MD"
    , countryCode = Just 373
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[235-7]\\d|[89]0)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22212345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:2[1-9]|3[1-79])\\d|5(?:33|5[257]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "62112345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:562|6\\d\\d|7(?:[189]\\d|6[07]|7[457-9]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[056]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "80812345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "808\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "30123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "3[08]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "80312345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "803\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryME : PhoneNumbers.Territory
countryME =
    { id = "ME"
    , countryCode = Just 382
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:20|[3-79]\\d|80\\d?)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "30234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:20[2-8]|3(?:[0-2][2-7]|3[24-7])|4(?:0[2-467]|1[2467])|5(?:[01][2467]|2[2-467]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "67622901"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6(?:00|3[024]|6[0-25]|[7-9]\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80080002"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80(?:[0-2578]|9\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "94515151"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:4[1568]|5[178])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "78108780"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "78[1-49]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "77273012"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "77[1-9]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMF : PhoneNumbers.Territory
countryMF =
    { id = "MF"
    , countryCode = Just 590
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:590|69\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "590271234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "690001234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMG : PhoneNumbers.Territory
countryMG =
    { id = "MG"
    , countryCode = Just 261
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[23]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "202123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "20(?:(?:2\\d|4[47]|5[3467]|6[279]|8[268]|9[245])\\d|7(?:2[29]|[35]\\d))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "321234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "3[2-49]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "221234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "22\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMH : PhoneNumbers.Territory
countryMH =
    { id = "MH"
    , countryCode = Just 692
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[256]\\d|45)\\d|329)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2471234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:247|528|625)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "2351234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:23|54)5|329|45[56])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "6351234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "635\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMK : PhoneNumbers.Territory
countryMK =
    { id = "MK"
    , countryCode = Just 389
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-578]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2(?:[23]\\d|5[0-24578]|6[01]|82)|3(?:1[3-68]|[23][2-68]|4[23568])|4(?:[23][2-68]|4[3-68]|5[2568]|6[25-8]|7[24-68]|8[4-68]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "72345678"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:(?:[0-25-8]\\d|3[2-4]|9[23])\\d|421)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "50012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5[02-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "80123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:0[1-9]|[1-9]\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryML : PhoneNumbers.Territory
countryML =
    { id = "ML"
    , countryCode = Just 223
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[246-9]\\d|50)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "20212345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:0(?:2\\d|7[0-8])|1(?:2[67]|[4-689]\\d))|4(?:0[0-4]|4[1-39])\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "65012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:079|17\\d)|(?:50|[679]\\d|8[239])\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMM : PhoneNumbers.Territory
countryMM =
    { id = "MM"
    , countryCode = Just 95
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1|[24-7]\\d)\\d{5,7}|8\\d{6,9}|9(?:[0-46-9]\\d{6,8}|5\\d{6})|2\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1234567"
          , possibleLengths =
                Just
                    { national =
                        "[6-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("5"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1(?:(?:2\\d|3[56]|[89][0-6])\\d|4(?:2[2-469]|39|6[25]|7[01])|6)|2(?:2(?:00|8[34])|4(?:0\\d|2[246]|39|62|7[01])|51\\d\\d)|4(?:2(?:2\\d\\d|480)|3(?:20\\d|470|56)|420\\d|5470)|5(?:2(?:2\\d\\d?|470)|4(?:2(?:1|86)|470)|522\\d|7(?:20\\d|480)|[89](?:20\\d|470))|6(?:0(?:[23]|88\\d)|(?:124|42[04]|[56]2\\d)\\d|3(?:20\\d|470)|7(?:(?:3\\d|8[01459])\\d|4(?:39|[67]0)))|7(?:0470|1(?:20\\d?|470)|4(?:25\\d|470)|5(?:202|470|96\\d))|8(?:[13](?:2\\d\\d|470)|[25]2\\d\\d))\\d{4}|(?:(?:1[2-6]\\d|4(?:2[24-8]|3[2-7]|[46][2-6]|5[3-5])|5(?:[27][2-8]|3[2-68]|4[24-8]|5[23]|6[2-4]|8[24-7]|9[2-7])|6(?:[19]20|42[03-6]|(?:52|7[45])\\d)|7(?:[04][24-8]|[15][2-7]|22|3[2-4]))\\d|25\\d{2,3}|8(?:[135]2\\d\\d|2(?:2\\d\\d|320)))\\d{3}|(?:2[2-9]|6(?:1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7[235-7]|8[245]|9[24])|8(?:1[2-689]|2[2-8]|3[24]|4[24-7]|5[245]|6[23]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "92123456"
          , possibleLengths =
                Just
                    { national =
                        "[7-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:17[01]|9(?:2(?:[0-4]|[56]\\d\\d)|(?:3(?:[0-36]|4\\d)|(?:6[89]|89)\\d|7(?:3|5[0-2]|[6-9]\\d))\\d|4(?:(?:[0245]\\d|[1379])\\d|88)|5[0-6]|9(?:[089]|[5-7]\\d\\d))\\d)\\d{4}|9[69]1\\d{6}|9[68]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8008001234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80080(?:[01][1-9]|2\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "13331234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1(?:333|468)|2468)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMN : PhoneNumbers.Territory
countryMN =
    { id = "MN"
    , countryCode = Just 976
    , internationalPrefix = Just "001"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[12]\\d{8,9}|[1257-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "50123456"
          , possibleLengths =
                Just
                    { national =
                        "[8-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("[4-6]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:[12](?:1|2[1-37]|(?:3[2-8]|4[2-68]|5[1-4689])\\d?)|5[0568])\\d{6}|[12]2[1-3]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "88123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8(?:[05689]\\d|3[01])|9[013-9]\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "75123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[05-8]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMO : PhoneNumbers.Territory
countryMO =
    { id = "MO"
    , countryCode = Just 853
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:28|[68]\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "28212345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:28[2-57-9]|8(?:11|[2-57-9]\\d))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "66123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6(?:[2356]\\d\\d|8(?:[02][5-9]|[1478]\\d|[356][0-4]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMP : PhoneNumbers.Territory
countryMP =
    { id = "MP"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[58]\\d\\d|(?:67|90)0)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "6702345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "670(?:2(?:3[3-7]|56|8[5-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "6702345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "670(?:2(?:3[3-7]|56|8[5-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMQ : PhoneNumbers.Territory
countryMQ =
    { id = "MQ"
    , countryCode = Just 596
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:596|69\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "596301234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "596(?:0[0-7]|10|2[7-9]|3[05-9]|4[0-46-8]|[5-7]\\d|8[09]|9[4-8])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "696201234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "69(?:6(?:[0-47-9]\\d|5[0-6]|6[0-4])|727)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMR : PhoneNumbers.Territory
countryMR =
    { id = "MR"
    , countryCode = Just 222
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-4]\\d\\d|800)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "35123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:25[08]|35\\d|45[1-7])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "22123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[2-4][0-46-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMS : PhoneNumbers.Territory
countryMS =
    { id = "MS"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[58]\\d\\d|900)\\d\\d|66449)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "6644912345"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "664491\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "6644923456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "66449[2-6]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMT : PhoneNumbers.Territory
countryMT =
    { id = "MT"
    , countryCode = Just 356
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[2579]\\d\\d|800)\\d|3550)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:0(?:[169]\\d|3[1-4])|[1-357]\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "96961234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:7(?:210|[79]\\d\\d)|9(?:2(?:1[01]|31)|69[67]|8(?:1[1-3]|89|97)|9\\d\\d))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "71171234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7117\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80071234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800[3467]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "50037123"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:0(?:0(?:37|43)|(?:6\\d|70|9[0168])\\d)|[12]\\d0[1-5])\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "35501234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "3550\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "50112345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "501\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMU : PhoneNumbers.Territory
countryMU =
    { id = "MU"
    , countryCode = Just 230
    , internationalPrefix = Just "0(?:0|[24-7]0|3[03])"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-468]|5\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "54480123"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:[03478]\\d|1[0-7]|6[0-79])|4(?:[013568]\\d|2[4-7])|54(?:4\\d|71)|6\\d\\d|8(?:14|3[129]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "52512345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:(?:2[589]|7\\d|9[0-8])\\d|4(?:2[1-389]|[489]\\d|7[1-9])|8(?:[0-689]\\d|7[15-8]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[0-2]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "3012345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "30\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "3201234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "3(?:20|9\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMV : PhoneNumbers.Territory
countryMV =
    { id = "MV"
    , countryCode = Just 960
    , internationalPrefix = Just "0(?:0|19)"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "6701234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3(?:0[0-3]|3[0-59])|6(?:[57][02468]|6[024-68]|8[024689]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7712345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:46[46]|(?:7[2-9]|9[14-9])\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "4001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "4[05]0\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMW : PhoneNumbers.Territory
countryMW =
    { id = "MW"
    , countryCode = Just 265
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "1\\d{6}(?:\\d{2})?|(?:[23]1|77|88|99)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1234567"
          , possibleLengths =
                Just
                    { national =
                        "7,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1[2-9]|21\\d\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "991234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:111|(?:77|88|99)\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "310123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "31\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMX : PhoneNumbers.Territory
countryMX =
    { id = "MX"
    , countryCode = Just 52
    , internationalPrefix = Just "0[09]"
    , nationalPrefix = Just "01"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1\\d|[2-9])\\d{9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2221234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7,8"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2(?:0[01]|2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-7][1-9]|3[1-8]|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "12221234567"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:2(?:2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-7][1-9]|3[1-8]|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|88)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "3001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "300\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "500\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMY : PhoneNumbers.Territory
countryMY =
    { id = "MY"
    , countryCode = Just 60
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1\\d\\d?|3\\d|[4-9])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "323856789"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:3(?:2[0-36-9]|3[0-368]|4[0-278]|5[0-24-8]|6[0-467]|7[1246-9]|8\\d|9[0-57])\\d|4(?:2[0-689]|[3-79]\\d|8[1-35689])|5(?:2[0-589]|[3468]\\d|5[0-489]|7[1-9]|9[23])|6(?:2[2-9]|3[1357-9]|[46]\\d|5[0-6]|7[0-35-9]|85|9[015-8])|7(?:[2579]\\d|3[03-68]|4[0-8]|6[5-9]|8[0-35-9])|8(?:[24][2-8]|3[2-5]|5[2-7]|6[2-589]|7[2-578]|[89][2-9])|9(?:0[57]|13|[25-7]\\d|[3489][0-8]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "123456789"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:(?:0(?:[23568]\\d|4[0-6]|7[016-9]|9[0-8])|1(?:[1-5]\\d\\d|6(?:0[5-9]|[1-9]\\d))|(?:[23679][2-9]|59\\d)\\d)\\d|4(?:[235-9]\\d\\d|400)|8(?:(?:1[23]|[236]\\d|5[7-9]|7[016-9]|9[0-8])\\d|4(?:[06]\\d|7[0-4])|8(?:[01]\\d|[27][0-4])))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1300123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1[378]00\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "1600123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1600\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "1546012345"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "154(?:6(?:0\\d|1[0-3])|8(?:[25]1|4[0189]|7[0-4679]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryMZ : PhoneNumbers.Territory
countryMZ =
    { id = "MZ"
    , countryCode = Just 258
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:2|8\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:[1346]\\d|5[0-2]|[78][12]|93)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "821234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8[2-7]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNA : PhoneNumbers.Territory
countryNA =
    { id = "NA"
    , countryCode = Just 264
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[68]\\d{7,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "61221234"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6(?:1(?:[02-4]\\d\\d|17)|2(?:17|54\\d|69|70)|3(?:17|2[0237]\\d|34|6[289]|7[01]|81)|4(?:17|(?:27|41|5[25])\\d|69|7[01])|5(?:17|2[236-8]\\d|69|7[01])|6(?:17|26\\d|38|42|69|7[01])|7(?:17|(?:2[2-4]|30)\\d|6[89]|7[01]))\\d{4}|6(?:1(?:2[2-7]|3[01378]|4[0-4]|69|7[014])|25[0-46-8]|32\\d|4(?:2[0-27]|4[016]|5[0-357])|52[02-9]|62[56]|7(?:2[2-69]|3[013]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "811234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:60|8[1245])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "870123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8701\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "88612345"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:3\\d\\d|86)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNC : PhoneNumbers.Territory
countryNC =
    { id = "NC"
    , countryCode = Just 687
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-57-9]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "201234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2[03-9]|3[0-5]|4[1-7]|88)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "751234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:5[0-4]|[79]\\d|8[0-79])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "366711"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "36\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNE : PhoneNumbers.Territory
countryNE =
    { id = "NE"
    , countryCode = Just 227
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[0289]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "20201234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:0(?:20|3[1-7]|4[13-5]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "93123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8[04589]|9\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "08123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "08\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "09123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "09\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNF : PhoneNumbers.Territory
countryNF =
    { id = "NF"
    , countryCode = Just 672
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[13]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "106609"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("5"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1(?:06|17|28|39)|3[0-2]\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "381234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("5"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "3[58]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNG : PhoneNumbers.Territory
countryNG =
    { id = "NG"
    , countryCode = Just 234
    , internationalPrefix = Just "009"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[78]\\d{10,13}|[7-9]\\d{9}|[1-9]\\d{7}|[124-7]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "18040123"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("5,6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:(?:[1-356]\\d|4[02-8]|7[0-79]|8[2-9])\\d|9(?:0[3-9]|[1-9]\\d))\\d{5}|(?:[12]\\d|4[147]|5[14579]|6[1578]|7[0-3578])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "8021234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:70(?:[1-689]\\d|7[0-3])|8(?:0(?:1[01]|[2-9]\\d)|1(?:[0-8]\\d|9[01]))|90[235-9]\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80017591759"
          , possibleLengths =
                Just
                    { national =
                        "[10-14]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{7,11}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "7001234567"
          , possibleLengths =
                Just
                    { national =
                        "[10-14]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "700\\d{7,11}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNI : PhoneNumbers.Territory
countryNI =
    { id = "NI"
    , countryCode = Just 505
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1800|[25-8]\\d{3})\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "81234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:5(?:5[0-7]|[78]\\d)|6(?:20|3[035]|4[045]|5[05]|77|8[1-9]|9[059])|(?:7[5-8]|8\\d)\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "18001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1800\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNL : PhoneNumbers.Territory
countryNL =
    { id = "NL"
    , countryCode = Just 31
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8])|[89]\\d{0,3})\\d{6}|1\\d{4,5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "5,6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "140(?:1(?:[035]|[16-8]\\d)|2(?:[0346]|[259]\\d)|3(?:[03568]|[124]\\d)|4(?:[0356]|[17-9]\\d)|5(?:[0358]|[124679]\\d)|7\\d|8[458])"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "101234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1(?:[035]\\d|1[13-578]|6[124-8]|7[24]|8[0-467])|2(?:[0346]\\d|2[2-46-9]|5[125]|9[479])|3(?:[03568]\\d|1[3-8]|2[01]|4[1-8])|4(?:[0356]\\d|1[1-368]|7[58]|8[15-8]|9[23579])|5(?:[0358]\\d|[19][1-9]|2[1-57-9]|4[13-8]|6[126]|7[0-3578])|7\\d\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "612345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6[1-58]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "662345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "66\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234"
          , possibleLengths =
                Just
                    { national =
                        "[7-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{4,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9061234"
          , possibleLengths =
                Just
                    { national =
                        "[7-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[069]\\d{4,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "851234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:85|91)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "14020"
          , possibleLengths =
                Just
                    { national =
                        "5,6,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "140(?:1(?:[035]|[16-8]\\d)|2(?:[0346]|[259]\\d)|3(?:[03568]|[124]\\d)|4(?:[0356]|[17-9]\\d)|5(?:[0358]|[124679]\\d)|7\\d|8[458])|8[478]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNO : PhoneNumbers.Territory
countryNO =
    { id = "NO"
    , countryCode = Just 47
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:0|[2-9]\\d{3})\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "40612345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:4[015-8]|5[89]|9\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[01]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "82012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "82[09]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "81021234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "810(?:0[0-6]|[2-8]\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "88012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "880\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "85012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "85[0-5]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "01234"
          , possibleLengths =
                Just
                    { national =
                        "5,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:0\\d|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "81212345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "81[23]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNP : PhoneNumbers.Territory
countryNP =
    { id = "NP"
    , countryCode = Just 977
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "9\\d{9}|[1-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "14567890"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1[0-6]\\d|(?:2[13-79]|3[135-8]|4[146-9]|5[135-7]|6[13-9]|7[15-9]|8[1-46-9]|9[1-79])[2-6])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "9841234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:6[0-3]|7[245]|8[0-24-68])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNR : PhoneNumbers.Territory
countryNR =
    { id = "NR"
    , countryCode = Just 674
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:444|55\\d|888)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "4441234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:444|888)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "5551234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "55[4-9]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNU : PhoneNumbers.Territory
countryNU =
    { id = "NU"
    , countryCode = Just 683
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[47]|888\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "7012"
          , possibleLengths =
                Just
                    { national =
                        "4"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[47]\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "8884012"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "888[4-9]\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryNZ : PhoneNumbers.Territory
countryNZ =
    { id = "NZ"
    , countryCode = Just 64
    , internationalPrefix = Just "0(?:0|161)"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[28]\\d{7,9}|[346]\\d{7}|(?:508|[79]\\d)\\d{6,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "32345678"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:24099|(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\d{3})\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "211234567"
          , possibleLengths =
                Just
                    { national =
                        "[8-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:[0-28]\\d?|[79])\\d{7}|21\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "26123456"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[28]6\\d{6,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "[8-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "508\\d{6,7}|80\\d{6,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900123456"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90\\d{6,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "701234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryOM : PhoneNumbers.Territory
countryOM =
    { id = "OM"
    , countryCode = Just 968
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[279]\\d{3}|500|8007\\d?)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "23123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2[2-6]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "92123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:7[129]\\d|9(?:0[1-9]|[1-9]\\d))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80071234"
          , possibleLengths =
                Just
                    { national =
                        "[7-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:500|8007\\d?)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPA : PhoneNumbers.Territory
countryPA =
    { id = "PA"
    , countryCode = Just 507
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[1-57-9]|6\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1(?:0\\d|1[479]|2[37]|3[0137]|4[17]|5[05]|[68][58]|7[0167]|9[39])|2(?:[0235-79]\\d|1[0-7]|4[013-9]|8[026-9])|3(?:[089]\\d|1[014-7]|2[0-35]|33|4[0-579]|55|6[068]|7[06-8])|4(?:00|3[0-579]|4\\d|7[0-57-9])|5(?:[01]\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-26-8]|3[03]|4[04]|5[05-9]|6[05]|7[0-24-9]|8[7-9]|90)|8(?:09|2[89]|3\\d|4[0-24-689]|5[014]|8[02])|9(?:0[5-9]|1[0135-8]|2[036-9]|3[35-79]|40|5[0457-9]|6[05-9]|7[04-9]|8[35-8]|9\\d))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "61234567"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1[16]1|21[89]|6(?:[02-9]\\d|1[0-6])\\d|8(?:1[01]|7[23]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "8601234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8(?:22|55|60|7[78]|86)|9(?:00|81))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPE : PhoneNumbers.Territory
countryPE =
    { id = "PE"
    , countryCode = Just 51
    , internationalPrefix = Just "19(?:1[124]|77|90)00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[14-8]|9\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "11234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1\\d|4[1-4]|5[1-46]|6[1-7]|7[2-46]|8[2-4])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "912345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "80512345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "805\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "80112345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "801\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "80212345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[24]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPF : PhoneNumbers.Territory
countryPF =
    { id = "PF"
    , countryCode = Just 689
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[48]\\d{7}|4\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "44\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "40412345"
          , possibleLengths =
                Just
                    { national =
                        "6,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "4(?:[09][4-689]\\d|4)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "87123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8[79]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPG : PhoneNumbers.Territory
countryPG =
    { id = "PG"
    , countryCode = Just 675
    , internationalPrefix = Just "00|140[1-3]"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "3123456"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:3[0-2]|4[257]|5[34]|9[78])\\d|64[1-9]|77(?:[0-24]\\d|30)|85[02-46-9])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "70123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:7(?:[0-689]\\d|75)|81\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1801234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "180\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "2751234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:0[0-47]|7[568])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPH : PhoneNumbers.Territory
countryPH =
    { id = "PH"
    , countryCode = Just 63
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1800\\d{2,4}|2|[89]\\d{4})\\d{5}|[3-8]\\d{8}|[28]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21234567"
          , possibleLengths =
                Just
                    { national =
                        "6,[8-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("4,5,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2\\d(?:\\d{2})?|(?:3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578])\\d{3}|88(?:22\\d\\d|42))\\d{4}|8[2-8]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "9051234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:81[37]|9(?:0[5-9]|1[024-9]|2[0-35-9]|3[02-9]|4[235-9]|5[056]|6[5-7]|7[3-79]|89|9[4-9]))\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "180012345678"
          , possibleLengths =
                Just
                    { national =
                        "[11-13]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1800\\d{7,9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPK : PhoneNumbers.Territory
countryPK =
    { id = "PK"
    , countryCode = Just 92
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:122|[24-8]\\d{4,5}|9(?:[013-9]\\d{2,4}|2(?:[01]\\d\\d|2(?:[025-8]\\d|1[01]))\\d))\\d{6}|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2123456789"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("[5-8]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "2(?:(?:1[2-9]\\d|[25][2-9])\\d{6}|(?:3[2358]|4[2-4]|9[2-8])[2-9]\\d{5,6})|4(?:(?:[0146-9][2-9]|2[2-9]\\d)\\d{6}|5[3479][2-9]\\d{5,6})|5(?:(?:[1-35-7][2-9]|8[126]\\d)\\d{6}|4[2-467][2-9]\\d{5,6})|6(?:0[468][2-9]\\d{5,6}|[1-8][2-9]\\d{6})|7(?:[14][2-9]\\d{6}|2[236][2-9]\\d{5,6})|8(?:[16][2-9]\\d{6}|(?:2[2-689]|3[23578]|4[3478]|5[2356])[2-9]\\d{5,6})|9(?:1[2-9]\\d{6}|(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])[2-9]\\d{5,6})"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "3012345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "3(?:[014]\\d|2[0-5]|3[0-7]|55|64)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "122044444"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "122\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "21111825888"
          , possibleLengths =
                Just
                    { national =
                        "11,12"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:0[468]|[1-8])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPL : PhoneNumbers.Territory
countryPL =
    { id = "PL"
    , countryCode = Just 48
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[1-9]\\d{6}(?:\\d{2})?|6\\d{5}(?:\\d{2})?"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "123456789"
          , possibleLengths =
                Just
                    { national =
                        "7,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])\\d{7}|(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "512345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:45|5[0137]|6[069]|7[2389]|88)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "641234567"
          , possibleLengths =
                Just
                    { national =
                        "[6-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "64\\d{4,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "701234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70[01346-8]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "801234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "801\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "391234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "39\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "804123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "804\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPM : PhoneNumbers.Territory
countryPM =
    { id = "PM"
    , countryCode = Just 508
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[45]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "430123"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:4[1-3]|50)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "551234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:4[02-4]|5[05])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPR : PhoneNumbers.Territory
countryPR =
    { id = "PR"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[589]\\d\\d|787)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "7872345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:787|939)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7872345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:787|939)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPS : PhoneNumbers.Territory
countryPS =
    { id = "PS"
    , countryCode = Just 970
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:1\\d|5)\\d\\d|[2489]2)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:22[2-47-9]|42[45]|82[01458]|92[369])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "599123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5[69]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1800123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "1700123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1700\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPT : PhoneNumbers.Territory
countryPT =
    { id = "PT"
    , countryCode = Just 351
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[26-9]\\d|30)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "212345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:[12]\\d|[35][1-689]|4[1-59]|6[1-35689]|7[1-9]|8[1-69]|9[1256])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "912345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:[1-36]\\d\\d|480)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[02]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "760123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6(?:0[178]|4[68])\\d|76(?:0[1-57]|1[2-47]|2[237]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "808123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80(?:8\\d|9[1579])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "884123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "884[0-4689]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "301234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "30\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "707123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70(?:7\\d|8[17])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "600110000"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "600\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPW : PhoneNumbers.Territory
countryPW =
    { id = "PW"
    , countryCode = Just 680
    , internationalPrefix = Just "01[12]"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[25-8]\\d\\d|345|488|900)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2771234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:55|77)|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76)|900)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "6201234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6[2-4689]0|77\\d|88[0-4])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryPY : PhoneNumbers.Territory
countryPY =
    { id = "PY"
    , countryCode = Just 595
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-46-9]\\d|5[0-8])\\d{7}|[2-9]\\d{5,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "212345678"
          , possibleLengths =
                Just
                    { national =
                        "[7-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("5,6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2(?:1\\d|2[4-68]|7[15]|9[1-5])|5(?:[1-4]\\d|5[02-4])|6(?:1\\d|3[1-3]|44|7[1-46-8]))\\d{5,6}|3(?:(?:18|3[167]|4[2357]|51)\\d{5,6}|[289]\\d{5,7})|4(?:[1246-8]\\d{5,7}|(?:3[12]|5[13]|9[1-47])\\d{5,6})|7(?:[1-3]\\d{5,7}|(?:4[0-4]|6[1-578]|75|8[0-8])\\d{5,6})|8(?:[1-36]\\d{5,7}|58\\d{5,6})|[26]1\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "961456789"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:51|6[129]|[78][1-6]|9[1-5])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "870012345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8700[0-4]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "201234567"
          , possibleLengths =
                Just
                    { national =
                        "[6-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[2-9]0\\d{4,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryQA : PhoneNumbers.Territory
countryQA =
    { id = "QA"
    , countryCode = Just 974
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:2|[3-7]\\d)\\d\\d|800)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "44123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "4[04]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "33123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[35-7]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "2123456"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:[12]\\d|61)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryRE : PhoneNumbers.Territory
countryRE =
    { id = "RE"
    , countryCode = Just 262
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:26|[68]\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "262161234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "262\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "692123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "69(?:2\\d\\d|3(?:0[0-46]|1[013]|2[0-2]|3[0-39]|4\\d|5[05]|6[0-26]|7[0-27]|8[0-38]|9[0-479]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "801234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "891123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "89[1-37-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "810123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:1[019]|2[0156]|84|90)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryRO : PhoneNumbers.Territory
countryRO =
    { id = "RO"
    , countryCode = Just 40
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[237]\\d|[89]0)\\d{7}|[23]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "211234567"
          , possibleLengths =
                Just
                    { national =
                        "6,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[23][13-6]\\d{7}|(?:2(?:19\\d|[3-6]\\d9)|31\\d\\d)\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "712034567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:(?:[02-7]\\d|8[03-8]|99)\\d|1(?:[01]\\d|20))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[036]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "801123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "801\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "372123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "37\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryRS : PhoneNumbers.Territory
countryRS =
    { id = "RS"
    , countryCode = Just 381
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[127]\\d{6,11}|3(?:[0-79]\\d{5,10}|8(?:[02-9]\\d{4,9}|1\\d{4,5}))|6\\d{7,9}|800\\d{3,9}|90\\d{4,8}|7\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "10234567"
          , possibleLengths =
                Just
                    { national =
                        "[7-12]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("[4-6]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1(?:[02-9][2-9]|1[1-9])\\d|2(?:[0-24-7][2-9]\\d|[389](?:0[2-9]|[2-9]\\d))|3(?:[0-8][2-9]\\d|9(?:0[2-9]|[2-9]\\d)))\\d{3,8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "601234567"
          , possibleLengths =
                Just
                    { national =
                        "[8-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6(?:[0-689]|7\\d)\\d{6,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "[6-12]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{3,9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90012345"
          , possibleLengths =
                Just
                    { national =
                        "[6-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:78\\d|90[0169])\\d{3,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "700123456"
          , possibleLengths =
                Just
                    { national =
                        "[6-12]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[06]\\d{4,10}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryRU : PhoneNumbers.Territory
countryRU =
    { id = "RU"
    , countryCode = Just 7
    , internationalPrefix = Just "810"
    , nationalPrefix = Just "8"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[347-9]\\d{9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "3011234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "9123456789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9\\d{9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[04]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "8091234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[39]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "8081234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "808\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryRW : PhoneNumbers.Territory
countryRW =
    { id = "RW"
    , countryCode = Just 250
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:06|[27]\\d\\d|[89]00)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "250123456"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:06|2[258]\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "720123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[238]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySA : PhoneNumbers.Territory
countrySA =
    { id = "SA"
    , countryCode = Just 966
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[15]|8\\d)\\d|92)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "112345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "1(?:1\\d|2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "512345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:[013-689]\\d|7[0-36-8])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "925012345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "925\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "920012345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "920\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "8110123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "811\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySB : PhoneNumbers.Territory
countrySB =
    { id = "SB"
    , countryCode = Just 677
    , internationalPrefix = Just "0[01]"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[1-6]|[7-9]\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "40123"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1[4-79]|[23]\\d|4[0-2]|5[03]|6[0-37])\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7421234"
          , possibleLengths =
                Just
                    { national =
                        "5,7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:48|(?:(?:7[1-9]|8[4-9])\\d|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8]))\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "18123"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1[38]\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "51123"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5[12]\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySC : PhoneNumbers.Territory
countrySC =
    { id = "SC"
    , countryCode = Just 248
    , internationalPrefix = Just "0(?:[02]|10?)"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:(?:[24]\\d|64)\\d|971)\\d|8000)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "4217123"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "4[2-46]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "2510123"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2[5-8]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8000000"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8000\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "6412345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:64\\d|971)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySD : PhoneNumbers.Territory
countrySD =
    { id = "SD"
    , countryCode = Just 249
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[19]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "153123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:5[3-7]|8[35-7])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "911231234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1[0-2]|9[0-3569])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySE : PhoneNumbers.Territory
countrySE =
    { id = "SE"
    , countryCode = Just 46
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "8123456"
          , possibleLengths =
                Just
                    { national =
                        "[7-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:0[1-8]\\d{6}|(?:[13689]\\d|2[0-35]|4[0-4]|5[0-25-9]|7[13-6])\\d{5,6})|(?:2(?:[136]\\d|2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])|3(?:0[0-4]|[1356]\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\d|6[03-5]|7[013]|8[0-79]|9[01]))\\d{5,6}|4(?:[0246]\\d{5,7}|(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])\\d{5,6})|6(?:[03]\\d{5,7}|(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])\\d{5,6})|8\\d{6,8}|9(?:0[1-9]\\d{4,6}|(?:1[0-68]|2\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8])\\d{5,6})|(?:[12][136]|3[356])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "701234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[02369]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "740123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "74[02-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "20123456"
          , possibleLengths =
                Just
                    { national =
                        "[6-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "20\\d{4,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234567"
          , possibleLengths =
                Just
                    { national =
                        "[7-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "649\\d{6}|9(?:00|39|44)[1-8]\\d{3,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "771234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "77[0-7]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "751234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "75[1-8]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "254123456789"
          , possibleLengths =
                Just
                    { national =
                        "12"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:25[245]|67[3-68])\\d{9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySG : PhoneNumbers.Territory
countrySG =
    { id = "SG"
    , countryCode = Just 65
    , internationalPrefix = Just "0[0-3]\\d"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1\\d{3}|[369]|7000|8(?:\\d{2})?)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "61234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6[1-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "81234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8[1-8]|9[0-8])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "18001234567"
          , possibleLengths =
                Just
                    { national =
                        "10,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:18|8)00\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "19001234567"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1900\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "31234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "3[12]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "70001234567"
          , possibleLengths =
                Just
                    { national =
                        "11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7000\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySH : PhoneNumbers.Territory
countrySH =
    { id = "SH"
    , countryCode = Just 290
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[256]\\d|8)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22158"
          , possibleLengths =
                Just
                    { national =
                        "4,5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:[0-57-9]\\d|6[4-9])\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "51234"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[56]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "26212"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "262\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySI : PhoneNumbers.Territory
countrySI =
    { id = "SI"
    , countryCode = Just 386
    , internationalPrefix = Just "00|10(?:22|66|88|99)"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[1-8]\\d{7}|90\\d{4,6}|8\\d{4,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "12345678"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:[1-357][2-8]|4[24-8])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "31234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:[37][01]|4[0139]|51)\\d\\d|6(?:[48]\\d\\d|5(?:1\\d|55|[67]0)|9(?:10|[69]\\d)))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80123456"
          , possibleLengths =
                Just
                    { national =
                        "[6-8]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{4,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90123456"
          , possibleLengths =
                Just
                    { national =
                        "[5-8]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "89[1-3]\\d{2,5}|90\\d{4,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "59012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:59\\d\\d|8(?:1(?:[67]\\d|8[01389])|2(?:0\\d|2[0378]|8[0-2489])|3[389]\\d))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySJ : PhoneNumbers.Territory
countrySJ =
    { id = "SJ"
    , countryCode = Just 47
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:0|(?:[4589]\\d|79)\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "79123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "79\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "41234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:4[015-8]|5[89]|9\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[01]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "82012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "82[09]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "81021234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "810(?:0[0-6]|[2-8]\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "88012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "880\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "85012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "85[0-5]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "01234"
          , possibleLengths =
                Just
                    { national =
                        "5,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:0\\d|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "81212345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "81[23]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySK : PhoneNumbers.Territory
countrySK =
    { id = "SK"
    , countryCode = Just 421
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "7,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:602|8(?:00|[5-9]\\d))\\d{3}|9(?:0(?:0\\d{3}|90)|[78]\\d{4}))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "221234567"
          , possibleLengths =
                Just
                    { national =
                        "6,7,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:16|[2-9]\\d{3})|[3-5][1-8]\\d{3})\\d{4}|(?:2|[3-5][1-8])1[67]\\d{3}|[3-5][1-8]16\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "912123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:0(?:[1-8]\\d|9[1-9])|(?:1[0-24-9]|[45]\\d)\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "9090123"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9090\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:00|[78]\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "850123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8[5-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "690123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6(?:02|5[0-4]|9[0-6])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "961234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "96\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySL : PhoneNumbers.Territory
countrySL =
    { id = "SL"
    , countryCode = Just 232
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-578]\\d|66|99)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22221234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "[235]2[2-4][2-9]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "25123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2[15]|3[013-5]|4[04]|5[05]|66|7[5-9]|8[08]|99)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySM : PhoneNumbers.Territory
countrySM =
    { id = "SM"
    , countryCode = Just 378
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:0549|[5-7]\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "0549886377"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "0549(?:8[0157-9]|9\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "66661212"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6[16]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "71123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[178]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "58001110"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5[158]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySN : PhoneNumbers.Territory
countrySN =
    { id = "SN"
    , countryCode = Just 221
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[378]\\d{4}|93330)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "301012345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "701234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:[06-8]\\d|21|90)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "884123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "88[4689]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "810123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "81[02468]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "933301234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3(?:392|9[01]\\d)\\d|93330)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySO : PhoneNumbers.Territory
countrySO =
    { id = "SO"
    , countryCode = Just 252
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[346-9]\\d{8}|[12679]\\d{7}|(?:[1-4]\\d|59)\\d{5}|[1348]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "4012345"
          , possibleLengths =
                Just
                    { national =
                        "6,7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1\\d|2[0-79]|3[0-46-8]|4[0-7]|59)\\d{5}|(?:[134]\\d|8[125])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "71123456"
          , possibleLengths =
                Just
                    { national =
                        "[7-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:15|(?:3[59]|4[89]|6[1-9]|79|8[08])\\d|9(?:0[67]|[2-9]))\\d|2(?:4\\d|8))\\d{5}|(?:6\\d|7[1-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySR : PhoneNumbers.Territory
countrySR =
    { id = "SR"
    , countryCode = Just 597
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-5]|68|[78]\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "211234"
          , possibleLengths =
                Just
                    { national =
                        "6,7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2[1-3]|3[0-7]|(?:4|68)\\d|5[2-58])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7412345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:7[124-7]|8[125-9])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "561234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "56\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySS : PhoneNumbers.Territory
countrySS =
    { id = "SS"
    , countryCode = Just 211
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[19]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "181234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "18\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "977123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:12|9[1257])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryST : PhoneNumbers.Territory
countryST =
    { id = "ST"
    , countryCode = Just 239
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:22|9\\d)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2221234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "22\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "9812345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:0(?:0[5-9]|[1-9]\\d)|[89]\\d\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySV : PhoneNumbers.Territory
countrySV =
    { id = "SV"
    , countryCode = Just 503
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[267]\\d{7}|[89]00\\d{4}(?:\\d{4})?"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2[1-6]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "70123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[67]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234"
          , possibleLengths =
                Just
                    { national =
                        "7,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{4}(?:\\d{4})?"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234"
          , possibleLengths =
                Just
                    { national =
                        "7,11"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{4}(?:\\d{4})?"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySX : PhoneNumbers.Territory
countrySX =
    { id = "SX"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[58]\\d\\d|900)\\d|7215)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "7215425678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "7215(?:4[2-8]|8[239]|9[056])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7215205678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "7215(?:1[02]|2\\d|5[034679]|8[014-8])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySY : PhoneNumbers.Territory
countrySY =
    { id = "SY"
    , countryCode = Just 963
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[1-39]\\d{8}|[1-5]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "112345678"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6,7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1[14]\\d|2(?:1\\d?|[235])|3(?:[13]\\d|4)|4[13]|5[1-3])\\d{6}|1[1-356]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "944567890"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9(?:22|[3-589]\\d|6[024-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countrySZ : PhoneNumbers.Territory
countrySZ =
    { id = "SZ"
    , countryCode = Just 268
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:0800|(?:[237]\\d|900)\\d\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "0800\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22171234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[23][2-5]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "76123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[6-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "08001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "0800\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900012345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "70012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTA : PhoneNumbers.Territory
countryTA =
    { id = "TA"
    , countryCode = Just 290
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "8\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "8999"
          , possibleLengths =
                Just
                    { national =
                        "4"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTC : PhoneNumbers.Territory
countryTC =
    { id = "TC"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[58]\\d\\d|649|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "6497121234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "649(?:712|9(?:4\\d|50))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "6492311234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "649(?:2(?:3[129]|4[1-7])|3(?:3[1-389]|4[1-8])|4[34][1-3])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "6497101234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "64971[01]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTD : PhoneNumbers.Territory
countryTD =
    { id = "TD"
    , countryCode = Just 235
    , internationalPrefix = Just "00|16"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:22|[69]\\d|77)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22501234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "22(?:[37-9]0|5[0-5]|6[89])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "63012345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6[023568]|77|9\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTG : PhoneNumbers.Territory
countryTG =
    { id = "TG"
    , countryCode = Just 228
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[279]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22212345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:2[2-7]|3[23]|4[45]|55|6[67]|77)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "90112345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:7[09]|9[0-36-9])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTH : PhoneNumbers.Territory
countryTH =
    { id = "TH"
    , countryCode = Just 66
    , internationalPrefix = Just "00[1-9]"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1\\d\\d?|[2-57]|[689]\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21234567"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "812345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:14|6[1-6]|[89]\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1800123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "1900123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1900\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "601234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6[08]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTJ : PhoneNumbers.Territory
countryTJ =
    { id = "TJ"
    , countryCode = Just 992
    , internationalPrefix = Just "810"
    , nationalPrefix = Just "8"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[3-59]\\d|77|88)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "372123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("3,[5-7]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "917123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:41[18]|(?:5[05]|77|88|9[0-35-9])\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTK : PhoneNumbers.Territory
countryTK =
    { id = "TK"
    , countryCode = Just 690
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-47]\\d{3,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "3101"
          , possibleLengths =
                Just
                    { national =
                        "[4-7]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2[2-4]|[34]\\d)\\d{2,5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7290"
          , possibleLengths =
                Just
                    { national =
                        "[4-7]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[2-4]\\d{2,5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTL : PhoneNumbers.Territory
countryTL =
    { id = "TL"
    , countryCode = Just 670
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-4]\\d|7\\d\\d?|[89]0)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2112345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2[1-5]|3[1-9]|4[1-4])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "77212345"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[3-8]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8012345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9012345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "7012345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTM : PhoneNumbers.Territory
countryTM =
    { id = "TM"
    , countryCode = Just 993
    , internationalPrefix = Just "810"
    , nationalPrefix = Just "8"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[1-6]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "12345678"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1(?:2\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "66123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "6[1-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTN : PhoneNumbers.Territory
countryTN =
    { id = "TN"
    , countryCode = Just 216
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-57-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "30010123"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:3[0-2]|7\\d)\\d{3}|81200)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "20123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:[259]\\d|4[0-6])\\d\\d|3(?:001|1(?:[1-35]\\d|40)|240|(?:6[0-4]|91)\\d))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80101234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8010\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "88123456"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "88\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "81101234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8[12]10\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTO : PhoneNumbers.Territory
countryTO =
    { id = "TO"
    , countryCode = Just 676
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:080|[56])0|[2-4]\\d|[78]\\d(?:\\d{2})?)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "20123"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2\\d|3[1-8]|4[1-4]|[56]0|7[0149]|8[05])\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7715123"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:7[578]|8[46-9])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "0800222"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "0800\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTR : PhoneNumbers.Territory
countryTR =
    { id = "TR"
    , countryCode = Just 90
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-58]\\d\\d|900)\\d{7}|4\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "444\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2123456789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "5012345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:(?:0[15-7]|1[06]|24|[34]\\d|5[1-59]|9[46])\\d\\d|6161)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Pager
          , exampleNumber = "5123456789"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "512\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8[89]8|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5922121234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "592(?:21[12]|461)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "4441444"
          , possibleLengths =
                Just
                    { national =
                        "7,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:444|850\\d{3})\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTT : PhoneNumbers.Territory
countryTT =
    { id = "TT"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[58]\\d\\d|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "8682211234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "868(?:2(?:01|1[89]|[23]\\d)|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\d|7[0-79])|82[124])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "8682911234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "868(?:2(?:6[6-9]|[7-9]\\d)|[37](?:0[1-9]|1[02-9]|[2-9]\\d)|4[6-9]\\d|6(?:20|78|8\\d))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "8686191234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "868619\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTV : PhoneNumbers.Territory
countryTV =
    { id = "TV"
    , countryCode = Just 688
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:2|7\\d\\d|90)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "20123"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2[02-9]\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "901234"
          , possibleLengths =
                Just
                    { national =
                        "6,7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:7[01]\\d|90)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTW : PhoneNumbers.Territory
countryTW =
    { id = "TW"
    , countryCode = Just 886
    , internationalPrefix = Just "0(?:0[25-79]|19)"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[24589]|7\\d)\\d{8}|[2-8]\\d{7}|2\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "221234567"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:2[2-8]\\d|3[2-9]|4(?:[239]\\d|[78])|5[2-8]|6[235-79]|7[1-9])\\d\\d|8(?:2(?:3\\d|66)|[7-9]\\d\\d))\\d{4}|24\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "912345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9[0-8]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[0-79]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "203123456"
          , possibleLengths =
                Just
                    { national =
                        "7,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "20(?:[013-9]\\d\\d|2)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "990123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "99\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "7012345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "70\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "500123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "50[0-46-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryTZ : PhoneNumbers.Territory
countryTZ =
    { id = "TZ"
    , countryCode = Just 255
    , internationalPrefix = Just "00[056]"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[26-8]\\d|41|90)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:8(?:[04]0|6[01])|90\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "222345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2[2-8]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "621234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6[2-9]|7[13-9])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[08]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "840123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:40|6[01])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "412345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "41\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryUA : PhoneNumbers.Territory
countryUA =
    { id = "UA"
    , countryCode = Just 380
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[3-9]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "311234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("[5-7]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "391234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:39|50|6[36-8]|7[1-3]|9[1-9])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "900212345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-49]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "891234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "89[1-579]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryUG : PhoneNumbers.Territory
countryUG =
    { id = "UG"
    , countryCode = Just 256
    , internationalPrefix = Just "00[057]"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[29]0|[347]\\d)\\d|800)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "312345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("[5-7]"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:20(?:(?:(?:[0147]\\d|5[0-4]|8[0-2])\\d|2(?:40|[5-9]\\d)|3(?:0[0-4]|[2367]\\d))\\d|6(?:00[0-2]|30[0-4]|[5-9]\\d\\d))|[34]\\d{5})\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "712345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7(?:(?:[0157-9]\\d|30|4[0-4])\\d|2(?:[03]\\d|60))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800[1-3]\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "901123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[1-3]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryUS : PhoneNumbers.Territory
countryUS =
    { id = "US"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[2-9]\\d{9}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2015550123"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[017]|6[0-279]|78|8[0-2])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-28]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "2015550123"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[017]|6[0-279]|78|8[0-2])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-28]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "7102123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "710[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryUY : PhoneNumbers.Territory
countryUY =
    { id = "UY"
    , countryCode = Just 598
    , internationalPrefix = Just "0(?:0|1[3-9]\\d)"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[249]\\d\\d|80)\\d{5}|9\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "21231234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2\\d|4[2-7])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "94231234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "9[1-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80[05]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[0-8]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryUZ : PhoneNumbers.Territory
countryUZ =
    { id = "UZ"
    , countryCode = Just 998
    , internationalPrefix = Just "810"
    , nationalPrefix = Just "8"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[679]\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "669050123"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6(?:1(?:22|3[124]|4[1-4]|5[1-3578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|6\\d\\d|7(?:[23]\\d|7[69])|9(?:22|4[1-8]|6[135]))|7(?:0(?:5[4-9]|6[0146]|7[124-6]|9[135-8])|1[12]\\d|2(?:22|3[13-57-9]|4[1-3579]|5[14])|3(?:2\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|6(?:22|3[12457]|4[13-8])|9(?:22|5[1-9])))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "912345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6(?:1(?:2(?:2[01]|98)|35[0-4]|50\\d|61[23]|7(?:[01][017]|4\\d|55|9[5-9]))|2(?:(?:11|7\\d)\\d|2(?:[12]1|9[01379])|5(?:[126]\\d|3[0-4]))|5(?:19[01]|2(?:27|9[26])|(?:30|59|7\\d)\\d)|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|(?:3[79]|9[0-3])\\d|4(?:56|83)|7(?:[07]\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79]))|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\d|[39][07])|9(?:0\\d|7[079]))|9(?:2(?:1[1267]|3[01]|5\\d|7[0-4])|(?:5[67]|7\\d)\\d|6(?:2[0-26]|8\\d)))|7(?:0\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\d|7(?:0\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|(?:33|9[4-6])\\d|5(?:0[0-4]|5[579]|9\\d)|7(?:[0-3579]\\d|4[0467]|6[67]|8[078]))|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\d|9[5-9])|7(?:0\\d|1[024589]|2[0-27]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\d))|5(?:112|2(?:0\\d|2[29]|[49]4)|3[1568]\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\d|8[78]|9[079]))|6(?:2(?:2[1245]|4[2-4])|39\\d|41[179]|5(?:[349]\\d|5[0-2])|7(?:0[017]|[13]\\d|22|44|55|67|88))|9(?:22[128]|3(?:2[0-4]|7\\d)|57[02569]|7(?:2[05-9]|3[37]|4\\d|60|7[2579]|87|9[07])))|9[0-57-9]\\d{3})\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryVA : PhoneNumbers.Territory
countryVA =
    { id = "VA"
    , countryCode = Just 39
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "0\\d{6}(?:\\d{4})?|3[0-8]\\d{9}|(?:[0138]\\d?|55)\\d{8}|[08]\\d{5}(?:\\d{2})?"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "0669812345"
          , possibleLengths =
                Just
                    { national =
                        "[6-11]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "06698\\d{1,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "3123456789"
          , possibleLengths =
                Just
                    { national =
                        "[9-11]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "33\\d{9}|3[1-9]\\d{8}|3[2-9]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "6,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80(?:0\\d{3}|3)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "899123456"
          , possibleLengths =
                Just
                    { national =
                        "6,[8-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:0878|1(?:44|6[346])\\d)\\d\\d|89(?:2|(?:4[5-9]|(?:5[5-9]|9)\\d\\d)\\d))\\d{3}|89[45][0-4]\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "848123456"
          , possibleLengths =
                Just
                    { national =
                        "6,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "84(?:[08]\\d{3}|[17])\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "1781234567"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1(?:78\\d|99)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "5512345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "55\\d{8}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryVC : PhoneNumbers.Territory
countryVC =
    { id = "VC"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[58]\\d\\d|784|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "7842661234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "784(?:266|3(?:6[6-9]|7\\d|8[0-24-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7844301234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4]))\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryVE : PhoneNumbers.Territory
countryVE =
    { id = "VE"
    , countryCode = Just 58
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[24]\\d|50)\\d|[89]00)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2121234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:2(?:12|3[457-9]|[467]\\d|[58][1-9]|9[1-6])|50[01])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "4121234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "4(?:1[24-8]|2[46])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9001234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryVG : PhoneNumbers.Territory
countryVG =
    { id = "VG"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:284|[58]\\d\\d|900)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2842291234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "284(?:(?:229|774|8(?:52|6[459]))\\d|4(?:22\\d|9(?:[45]\\d|6[0-5])))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "2843001234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "284(?:(?:3(?:0[0-3]|4[0-7]|68|9[34])|54[0-57])\\d|4(?:(?:4[0-6]|68)\\d|9(?:6[6-9]|9\\d)))\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryVI : PhoneNumbers.Territory
countryVI =
    { id = "VI"
    , countryCode = Just 1
    , internationalPrefix = Just "011"
    , nationalPrefix = Just "1"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:34|90)0|[58]\\d\\d)\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "3406421234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "340(?:2(?:01|2[06-8]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-57-9]|27|7\\d)|884|998)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "3406421234"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("7"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "340(?:2(?:01|2[06-8]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-57-9]|27|7\\d)|884|998)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "9002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PersonalNumber
          , exampleNumber = "5002345678"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryVN : PhoneNumbers.Territory
countryVN =
    { id = "VN"
    , countryCode = Just 84
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[12]\\d{9}|[135-9]\\d{8}|(?:[16]\\d?|[78])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = NoInternationalDialling
          , exampleNumber = ""
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[17]99|69\\d\\d?)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "2101234567"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "2(?:0[3-9]|1[0-689]|2[0-25-9]|3[2-9]|4[2-8]|5[124-9]|6[0-39]|7[0-7]|8[2-7]|9[0-4679])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "912345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:3\\d|7[06-9])\\d|5(?:2[238]|[689]\\d)|8(?:[1-58]\\d|6[5-9]|9[689])|9(?:[0-8]\\d|9[013-9]))\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "1800123456"
          , possibleLengths =
                Just
                    { national =
                        "[8-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1800\\d{4,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "1900123456"
          , possibleLengths =
                Just
                    { national =
                        "[8-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "1900\\d{4,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "672012345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "672\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "1992000"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[17]99|69\\d\\d?|80\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryVU : PhoneNumbers.Territory
countryVU =
    { id = "VU"
    , countryCode = Just 678
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:[23]|(?:[57]\\d|90)\\d)\\d|[48]8)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22123"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:(?:2[02-9]|88)\\d|3(?:[4-7]\\d|8[0-8])|48[4-9])\\d\\d"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "5912345"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:5(?:[0-689]\\d|7[2-5])|7[013-7]\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "9010123"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "90[1-9]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "30123"
          , possibleLengths =
                Just
                    { national =
                        "5,7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:3[03]|900\\d)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryWF : PhoneNumbers.Territory
countryWF =
    { id = "WF"
    , countryCode = Just 681
    , internationalPrefix = Just "00"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[45]0|68|72|8\\d)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "501234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:50|68|72)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "501234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:50|68|72|8[23])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voicemail
          , exampleNumber = "401234"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "[48]0\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryWS : PhoneNumbers.Territory
countryWS =
    { id = "WS"
    , countryCode = Just 685
    , internationalPrefix = Just "0"
    , nationalPrefix = Nothing
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[2-6]|8\\d(?:\\d{4})?)\\d{4}|[78]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "22123"
          , possibleLengths =
                Just
                    { national =
                        "5"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:[2-5]\\d|6[1-9])\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "7212345"
          , possibleLengths =
                Just
                    { national =
                        "7,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:7[25-7]|8(?:[3-7]|9\\d{3}))\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123"
          , possibleLengths =
                Just
                    { national =
                        "6"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryXK : PhoneNumbers.Territory
countryXK =
    { id = "XK"
    , countryCode = Just 383
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:[23]\\d{2,3}|4\\d\\d|[89]00)\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "28012345"
          , possibleLengths =
                Just
                    { national =
                        "8,9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:2[89]|39)0\\d{6}|[23][89]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "43201234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "4[3-79]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "80001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "90001234"
          , possibleLengths =
                Just
                    { national =
                        "8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "900\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryYE : PhoneNumbers.Territory
countryYE =
    { id = "YE"
    , countryCode = Just 967
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:1|7\\d)\\d{7}|[1-7]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1234567"
          , possibleLengths =
                Just
                    { national =
                        "7,8"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "17\\d{6}|(?:[12][2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-68])\\d{5}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "712345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "7[0137]\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryYT : PhoneNumbers.Territory
countryYT =
    { id = "YT"
    , countryCode = Just 262
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:26|63)9|80\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "269601234"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "269(?:0[67]|5[01]|6\\d|[78]0)\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "639012345"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "639(?:0[0-79]|1[019]|[267]\\d|3[09]|[45]0|9[04-79])\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "801234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryZA : PhoneNumbers.Territory
countryZA =
    { id = "ZA"
    , countryCode = Just 27
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "[1-9]\\d{8}|8\\d{4,7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "101234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:1[0-8]|2[1-378]|3[1-69]|4\\d|5[1346-8])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "711234567"
          , possibleLengths =
                Just
                    { national =
                        "[5-9]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:6\\d|7[0-46-9]|8[1-5])\\d{7}|8[1-4]\\d{3,6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "801234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = PremiumRate
          , exampleNumber = "862345678"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:86[2-9]|9[0-2]\\d)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = SharedCost
          , exampleNumber = "860123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "860\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "871234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "87\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Uan
          , exampleNumber = "861123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "861\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryZM : PhoneNumbers.Territory
countryZM =
    { id = "ZM"
    , countryCode = Just 260
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "(?:(?:21|76|9\\d)\\d|800)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "211234567"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("6"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "21[1-8]\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "955123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:76|9[5-8])\\d{7}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "800123456"
          , possibleLengths =
                Just
                    { national =
                        "9"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "800\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }


{-| -}
countryZW : PhoneNumbers.Territory
countryZW =
    { id = "ZW"
    , countryCode = Just 263
    , internationalPrefix = Just "00"
    , nationalPrefix = Just "0"
    , numberDescriptions =
        [ { descriptionType = GeneralDesc
          , exampleNumber = ""
          , possibleLengths = Nothing
          , pattern =
                "2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = FixedLine
          , exampleNumber = "1312345"
          , possibleLengths =
                Just
                    { national =
                        "[5-10]"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly =
                        Just
                            ("3,4"
                                |> Regex.fromString
                                |> Maybe.withDefault Regex.never
                            )
                    }
          , pattern =
                "(?:1(?:(?:3\\d|9)\\d|[4-8])|2(?:(?:(?:0(?:2[014]|5)|(?:2[0157]|31|84|9)\\d\\d|[56](?:[14]\\d\\d|20)|7(?:[089]|2[03]|[35]\\d\\d))\\d|4(?:2\\d\\d|8))\\d|1(?:2|[39]\\d{4}))|3(?:(?:123|(?:29\\d|92)\\d)\\d\\d|7(?:[19]|[56]\\d))|(?:4\\d\\d|9[2-9])\\d\\d?|5(?:0|1[2-478]|26|[37]2|4(?:2\\d{3}|83)|5(?:25\\d\\d|[78])|[689]\\d)|6(?:(?:[16-8]21|28|52[013])\\d\\d|[39])|8(?:[1349]28|523)\\d\\d)\\d{3}|(?:(?:2(?:(?:(?:0|8[146])\\d|7[1-7])\\d|2(?:[278]\\d|92)|58(?:2\\d|3))|3(?:[26]|9\\d{3})|5(?:4\\d|5)\\d\\d)\\d|6(?:(?:(?:[0-246]|[78]\\d)\\d|37)\\d|5[2-8]))\\d\\d|(?:2(?:[569]\\d|8[2-57-9])|3(?:[013-59]\\d|8[37])|6[89]8)\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Mobile
          , exampleNumber = "712345678"
          , possibleLengths =
                Just
                    { national =
                        "9,10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "(?:7(?:1\\d|3[2-9]|7[1-9]|8[2-5])|8644)\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = TollFree
          , exampleNumber = "8001234"
          , possibleLengths =
                Just
                    { national =
                        "7"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "80(?:[01]\\d|20|8[0-8])\\d{3}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        , { descriptionType = Voip
          , exampleNumber = "8686123456"
          , possibleLengths =
                Just
                    { national =
                        "10"
                            |> Regex.fromString
                            |> Maybe.withDefault Regex.never
                    , localOnly = Nothing
                    }
          , pattern =
                "86(?:1[12]|30|55|77|8[368])\\d{6}"
                    |> Regex.fromString
                    |> Maybe.withDefault Regex.never
          }
        ]
    }
